{"version":3,"sources":["components/cart/paymentMethod/type/PaymentMethod.ts","log/Logger.ts","components/exception/ErrorHandler.tsx","store/StoreError.tsx","components/loader/Loader.tsx","store/StoreLoader.tsx","utils/NumberUtils.ts","router/RouterEndpoint.ts","components/auth/useUserAuthenticator.tsx","app/AppApi.ts","components/product/ProductApi.ts","class/ClassTransformer.ts","srorage/BaseLocalStorage.ts","srorage/BaseIterableLocalStorage.ts","components/cart/orderItem/OrderItemStorage.ts","components/cart/paymentMethod/PaymentMethodStorage.ts","components/cart/shippingAddress/ShippingAddressStorage.ts","components/cart/CartStore.ts","store/reducer/ReducerActionCreator.ts","components/cart/CartActions.ts","components/payPal/PayPalUtils.ts","components/product/ProductUtils.ts","components/auth/AuthUtils.ts","components/config/ConfigApi.ts","components/order/OrderApi.ts","components/order/OrderStore.ts","components/order/OrderActions.ts","components/order/Order.tsx","screens/AdminOrderScreen.tsx","components/order/orders/Orders.tsx","screens/AdminOrdersScreen.tsx","components/auth/useUserAdminAuthenticator.tsx","components/content/JustifyCenter.tsx","components/form/FormControlError.tsx","components/form/FormControl.tsx","class/ClassValidator.ts","components/form/FormUtils.ts","components/review/ReviewApi.ts","components/product/ProductStore.ts","components/product/ProductActions.ts","components/product/admin/ProductForm.ts","components/product/admin/Product.tsx","screens/AdminProductCreateScreen.tsx","screens/AdminProductScreen.tsx","components/product/products/admin/Products.tsx","screens/AdminProductsScreen.tsx","components/user/UserApi.ts","components/user/UserStore.ts","components/user/UserActions.ts","components/user/UserForm.ts","components/user/User.tsx","screens/AdminUserScreen.tsx","components/user/users/Users.tsx","screens/AdminUsersScreen.tsx","components/cart/CartUtils.ts","components/cart/Cart.tsx","screens/CartScreen.tsx","http/useQueryParams.ts","components/paginator/Paginator.tsx","components/product/products/carousel/ProductsCarousel.tsx","components/product/rating/ProductRating.tsx","components/product/products/ProductsItem.tsx","components/product/products/skeletons/ProductsItemSkeleton.tsx","components/product/products/skeletons/ProductsSkeleton.tsx","components/product/products/Products.tsx","screens/ProductsScreen.tsx","screens/HomeScreen.tsx","screens/NotFoundScreen.tsx","screens/OrderScreen.tsx","screens/OrdersScreen.tsx","components/cart/checkoutSteps/CheckoutStepsItem.tsx","components/cart/checkoutSteps/CheckoutSteps.tsx","components/cart/paymentMethod/PaymentMethod.tsx","screens/PaymentScreen.tsx","components/order/PlaceOrder.tsx","screens/PlaceOrderScreen.tsx","components/product/rating/Rating.tsx","components/product/Product.tsx","screens/ProductScreen.tsx","components/cart/shippingAddress/ShippingAddress.tsx","screens/ShippingScreen.tsx","components/auth/AuthApi.ts","components/auth/AuthStorage.ts","components/auth/AuthStore.ts","components/auth/AuthActions.ts","components/auth/useAuthRedirect.tsx","components/auth/signin/SignIn.tsx","screens/SignInScreen.tsx","components/form/FormError.tsx","components/auth/signup/SignUpFormUtils.ts","components/auth/signup/SignUpForm.ts","components/auth/signup/SignUp.tsx","screens/SignUpScreen.tsx","screens/UnauthorizedScreen.tsx","router/Routes.tsx","components/outline/Body.tsx","components/outline/Footer.tsx","components/search/SearchBox.tsx","components/outline/Header.tsx","i18n/i18n.ts","i18n/I18nProvider.tsx","router/RouterProvider.tsx","skeleton/SkeletonThemeProvider.tsx","store/Store.ts","store/StoreProvider.tsx","app/AppConfig.tsx","app/AppContext.ts","font/FontAwesome.ts","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["PaymentMethod","Logger","message","console","log","ErrorHandler","error","errorInfo","JSON","stringify","this","setState","state","props","children","componentStack","React","Component","StoreError","stack","useState","details","setDetails","useEffect","isAxiosError","apiError","response","data","Alert","variant","Loader","Spinner","animation","role","style","styles","container","className","width","height","margin","display","StoreLoader","NumberUtils","value","Math","round","toFixed","RouterEndpoint","redirect","id","keyword","useUserAuthenticator","history","useHistory","useSelector","auth","push","location","pathname","BASE_URL","process","baseApi","axios","create","baseURL","headers","AppApi","getAuthorizationHeader","token","Authorization","baseUrl","findAll","page","pageLimit","sort","a","endpoint","config","params","get","Promise","resolve","reject","findById","save","entity","post","updateById","query","patch","deleteById","delete","uploadImage","fieldName","formData","ProductApi","ClassTransformer","entityClass","excludeExtraneousValues","Tranformer","parse","clone","toPlain","BaseLocalStorage","key","localStorage","getItem","parseKey","deserialize","setItem","serialize","removeItem","prefix","BaseIterableLocalStorage","deserializeIterable","OrderItemEntity","product","quantity","name","image","price","countInStock","OrderItemStorage","PaymentMethodEntity","PaymentMethodStorage","ShippingAddressEntity","address","city","postalCode","country","ShippingAddressStorage","action","type","payload","initialState","loading","orderItems","shippingAddress","find","paymentMethod","paymentMethodEntity","getPaymentMethodFromStorage","load","addOrderItem","orderItemAdd","orderItemFound","orderItem","orderItemsUpdated","index","findIndex","orderItemUpdated","removeOrderItem","productItemRemove","itemsUpdated","filter","item","saveShippingAddress","savePaymentMethod","reset","fail","CartStore","reducer","CartActions","dispatch","getState","cart","remove","PayPalUtils","clientId","onLoadHandler","script","document","createElement","async","src","onload","body","appendChild","ProductUtils","imageName","AuthUtils","authState","authToken","ConfigApi","OrderApi","queryByUserId","byUserId","pay","payOrder","order","orders","OrderStore","OrderActions","paginator","paymentResult","Order","useDispatch","useParams","orderState","user","payPalClientId","undefined","payPalSdkReady","setPayPalSdkReady","authData","Row","Col","md","ListGroup","Item","href","email","isDelivered","deliveredAt","isPaid","paidAt","map","Image","alt","fluid","rounded","Card","orderItemsPrice","shippingPrice","taxPrice","totalPrice","amount","onSuccess","isAdmin","Button","disabled","onClick","Date","AdminOrderScreen","Orders","Table","striped","bordered","hover","responsive","createdAt","substring","toString","icon","color","to","AdminOrdersScreen","useUserAdminAuthenticator","JustifyCenter","Container","xs","FormControlError","errors","FormControl","label","helpText","instantFeedback","controlRef","callbackRef","restProps","useField","field","meta","didFocus","setDidFocus","isValid","trim","length","touched","isInvalid","Form","Group","controlId","Label","Control","ref","onFocus","ClassValidator","obj","skipMissingProperties","options","skipUndefinedProperties","skipNullProperties","dismissDefaultMessages","validationError","target","forbidUnknownValues","Validator","errorsUpdated","reduceErrors","accumulator","accumulatorUpdated","forEach","constraints","property","Object","values","fromPlain","validate","formState","formErrors","FormUtils","isSubmittable","form","isValidating","isSubmitting","dirty","ReviewApi","products","productsTopRated","review","productsDataUpdated","ProductStore","ProductActions","ProductForm","Expose","IsString","IsNotEmpty","IsNumber","Product","isCreate","productState","userId","fileUploading","setFileUploading","initialFormState","useMemo","validateFormHandler","result","isFormSubmittable","submitFormHandler","FormActions","rating","numReviews","setSubmitting","uploadFileHandler","e","fileList","files","file","FormData","append","setFieldValue","enableReinitialize","initialValues","onSubmit","handleSubmit","noValidate","schema","placeholder","File","custom","onChange","getSubmitTitle","AdminProductCreateScreen","AdminProductScreen","Products","title","category","brand","window","confirm","AdminProductsScreen","UserApi","users","usersDataUpdated","UserStore","UserActions","UserForm","User","userState","AdminUserScreen","Users","AdminUsersScreen","CartUtils","reduce","Cart","orderItemsCount","orderItemsTotal","changeOrderItemQuantityHandler","useCallback","Number","removeOrderItemHandler","renderOrderItemStockValues","Array","keys","optionValue","isCheckoutable","as","CartScreen","useQueryParams","URLSearchParams","useLocation","search","Paginator","totalPages","currentPage","Pagination","active","ProductsCarousel","Carousel","pause","Caption","ProductRating","text","getIcon","rate","ProductsItem","Img","Body","Title","Text","ProductsItemSkeleton","ProductsSkeleton","of","_","sm","lg","xl","queryParams","t","useTranslation","Helmet","content","namespace","ProductsScreen","HomeScreen","NotFoundScreen","OrderScreen","OrdersScreen","CheckoutStepsItem","step","linkUrl","linkName","Nav","Link","CheckoutSteps","step1","step2","step3","step4","paymentMethodSaved","PaymentMethodType","PAYPAL","setPaymentMethod","preventDefault","Check","checked","STRIPE","PaymentScreen","PlaceOrder","PlaceOrderScreen","Rating","productError","cartError","setQuantity","setRating","comment","setComment","alert","countInStockValues","optionvalue","description","reviews","_reviews","rows","ProductScreen","ShippingAddress","setAddress","setCity","setPostalCode","setCountry","required","ShippingScreen","AuthApi","signUp","signIn","signOut","AuthDataEntity","AuthStorage","AuthStore","authStorage","AuthActions","useAuthRedirect","SignIn","setEmail","password","setPassword","SignInScreen","FormError","SignUpFormUtils","constraint1","SignUpForm","Exclude","IsEmail","MinLength","SignUp","setFormErrors","confirmPassword","SignUpScreen","UnauthorizedScreen","Routes","exact","path","component","Footer","SearchBox","setKeyword","inline","Header","i18n","changeLanguage","lng","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","NavDropdown","use","languageDetector","initReactI18next","httpBackend","init","backend","loadPath","ns","defaultNS","nonExplicitSupportedLngs","supportedLngs","fallbackLng","debug","interpolation","escapeValue","I18nProvider","Suspense","fallback","RouterProvider","SkeletonThemeProvider","combinedReducer","combineReducers","middleware","thunk","Store","createStore","composeWithDevTools","applyMiddleware","StoreProvider","store","AppConfig","cleanEnv","REACT_APP_ENV_NAME","str","REACT_APP_APP_API_URL","AppContext","library","add","fas","far","App","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.288c119e.chunk.js","sourcesContent":["export enum PaymentMethod {\n  PAYPAL = 'PayPal',\n  STRIPE = 'Stripe',\n}\n","const log = (message: string): void => {\n  console.log(message);\n};\n\nexport const Logger = {\n  log,\n};\n","import React from 'react';\nimport { Logger } from '../../log/Logger';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype State = {\n  error?: Error;\n  errorInfo?: React.ErrorInfo;\n};\n\nexport class ErrorHandler extends React.Component<Props, State> {\n  static getDerivedStateFromError(error: Error): Partial<State> {\n    return { error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    Logger.log(JSON.stringify({ error, errorInfo }));\n\n    this.setState({ errorInfo });\n  }\n\n  render(): React.ReactNode {\n    if (!this.state) {\n      return this.props.children;\n    }\n\n    const { error, errorInfo } = this.state;\n    if (!error) {\n      return this.props.children;\n    }\n\n    return (\n      <div>\n        <div>\n          <p>There was an error in loading this page.</p>\n        </div>\n        {errorInfo && (\n          <div>\n            <details>\n              <summary>Click for error details</summary>\n              {errorInfo.componentStack}\n            </details>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { ApiError } from '../app/AppApi';\n\ntype Props = {\n  error: ApiError | Error;\n};\n\nexport const StoreError = (props: Props): JSX.Element => {\n  const { error } = props;\n\n  const { message, stack } = error;\n  const [details, setDetails] = useState();\n\n  useEffect(() => {\n    if (!(error as ApiError).isAxiosError) {\n      return;\n    }\n\n    const apiError = error as ApiError;\n    if (apiError.response && apiError.response.data.error) {\n      setDetails(apiError.response.data.error);\n    }\n  }, [error]);\n\n  return (\n    <div>\n      <div>\n        <Alert variant='danger'>{message}</Alert>\n      </div>\n      {(details || stack) && (\n        <div>\n          <details>\n            <summary>Click for error details</summary>\n            {details && <div>{details}</div>}\n            {stack && <div>{stack}</div>}\n          </details>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nexport const Loader = (): JSX.Element => {\n  return (\n    <Spinner animation='border' role='status' style={styles.container}>\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  );\n};\n\ntype Styles = {\n  container: React.CSSProperties;\n};\n\nconst styles: Styles = {\n  container: { width: '100px', height: '100px', margin: 'auto', display: 'block' },\n};\n","import React from 'react';\nimport { Loader } from '../components/loader/Loader';\n\nexport const StoreLoader = (): JSX.Element => {\n  return <Loader />;\n};\n","const toFixed = (value: number): string => {\n  return value.toFixed(2);\n};\n\nconst round = (value: number): number => {\n  return Math.round(value * 100) / 100;\n};\n\nexport const NumberUtils = {\n  round,\n  toFixed,\n};\n","export const RouterEndpoint = {\n  signUp: (redirect?: string): string => (redirect ? `/signup?redirect=${redirect}` : `/signup`),\n  signIn: (redirect?: string): string => (redirect ? `/signin?redirect=${redirect}` : `/signin`),\n  signOut: (): string => `/signout`,\n  cart: (): string => `/cart`,\n  shipping: (): string => `/shipping`,\n  payment: (): string => `/payment`,\n  placeOrder: (): string => `/placeorder`,\n  userOrders: (id?: string): string => (id ? `/user/orders/${id}` : `/user/orders`),\n  adminUsers: (id?: string): string => (id ? `/admin/users/${id}` : `/admin/users`),\n  adminOrders: (id?: string): string => (id ? `/admin/orders/${id}` : `/admin/orders`),\n  adminProducts: (id?: string): string => (id ? `/admin/products/${id}` : `/admin/products`),\n  adminCreateProduct: (): string => `/admin/products/create`,\n  products: (id?: string): string => (id ? `/products/${id}` : `/products`),\n  unauthorized: (): string => `/unauthorized`,\n  search: (keyword: string): string => `/search/${keyword}`,\n  home: (): string => `/`,\n};\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { RouterEndpoint } from '../../router/RouterEndpoint';\nimport { State } from '../../store/Store';\n\nexport const useUserAuthenticator = (redirect?: string): void => {\n  const history = useHistory();\n\n  const authState = useSelector((state: State) => state.auth);\n  const { data } = authState;\n\n  useEffect(() => {\n    if (!data) {\n      history.push(RouterEndpoint.signIn(redirect ? redirect : history.location.pathname));\n    }\n  }, [data, history, redirect]);\n};\n","import axios, { AxiosError } from 'axios';\n\nexport type ApiError = AxiosError;\nexport const BASE_URL = process.env.REACT_APP_APP_API_URL;\n\nconst baseApi = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\ntype AuthorizationHeader = {\n  Authorization: string;\n};\n\nconst getAuthorizationHeader = (token: string | null): AuthorizationHeader | null => {\n  return token ? { Authorization: `Bearer ${token}` } : null;\n};\n\nexport const AppApi = {\n  baseApi,\n  getAuthorizationHeader,\n};\n","import { AxiosRequestConfig } from 'axios';\nimport { AppApi } from '../../app/AppApi';\nimport { PageableResult } from '../../type/PageableResult';\nimport { Result } from '../../type/Result';\nimport { FileInfo } from '../file/type/FileInfo';\nimport { Product } from './type/Product';\n\nexport type ProductApiPageResponse = PageableResult<Product, Error>;\nexport type ProductApiResponse = Result<Product, Error>;\nexport type FileApiResponse = Result<FileInfo, Error>;\nconst baseUrl = '/products';\n\nconst findAll = async (\n  keyword?: string,\n  page?: string,\n  pageLimit?: string,\n  sort?: string,\n): Promise<ProductApiPageResponse> => {\n  try {\n    const endpoint = `${baseUrl}`;\n    const config: AxiosRequestConfig = {\n      params: {\n        keyword: keyword ?? null,\n        page: page ?? null,\n        pageLimit: pageLimit ?? null,\n        sort: sort ?? null,\n      },\n    };\n\n    const response = await AppApi.baseApi.get<ProductApiPageResponse>(endpoint, config);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nconst findById = async (id: string): Promise<ProductApiResponse> => {\n  try {\n    const endpoint = `${baseUrl}/${id}`;\n\n    const response = await AppApi.baseApi.get<ProductApiResponse>(endpoint);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nconst save = async (token: string | null, entity: Product): Promise<ProductApiResponse> => {\n  try {\n    const endpoint = `${baseUrl}`;\n    const config: AxiosRequestConfig = {\n      headers: {\n        ...AppApi.getAuthorizationHeader(token),\n      },\n    };\n\n    const response = await AppApi.baseApi.post<ProductApiResponse>(endpoint, entity, config);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nconst updateById = async (\n  token: string | null,\n  id: string,\n  query: Partial<Product>,\n): Promise<ProductApiResponse> => {\n  try {\n    const endpoint = `${baseUrl}/${id}`;\n    const config: AxiosRequestConfig = {\n      headers: {\n        ...AppApi.getAuthorizationHeader(token),\n      },\n    };\n\n    const response = await AppApi.baseApi.patch<ProductApiResponse>(endpoint, query, config);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nconst deleteById = async (token: string | null, id: string): Promise<void> => {\n  try {\n    const endpoint = `${baseUrl}/${id}`;\n    const config: AxiosRequestConfig = {\n      headers: {\n        ...AppApi.getAuthorizationHeader(token),\n      },\n    };\n\n    await AppApi.baseApi.delete<ProductApiResponse>(endpoint, config);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nconst uploadImage = async (fieldName: string, formData: FormData): Promise<FileApiResponse> => {\n  try {\n    const endpoint = `${baseUrl}/upload?field=${fieldName}&imageFileType=true`;\n    const config: AxiosRequestConfig = {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    };\n\n    const response = await AppApi.baseApi.post<FileApiResponse>(endpoint, formData, config);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const ProductApi = {\n  findAll,\n  findById,\n  save,\n  updateById,\n  deleteById,\n  uploadImage,\n};\n","import * as Tranformer from 'class-transformer';\nimport { ClassType } from 'class-transformer/ClassTransformer';\n\nexport type Clazz<T> = ClassType<T>;\n\nexport class ClassTransformer {\n  static fromPlain<T>(\n    entityClass: Clazz<T>,\n    entity: Object | null,\n    excludeExtraneousValues = true,\n  ): T {\n    return Tranformer.plainToClass(entityClass, entity, {\n      excludeExtraneousValues,\n    });\n  }\n\n  static toPlain<T>(entity: T): Object {\n    return JSON.parse(JSON.stringify(Tranformer.classToPlain(entity)));\n  }\n\n  static trimExcluded<T>(entity: T): T {\n    const clone = this.clone(entity);\n    return Tranformer.plainToClassFromExist(clone, this.toPlain(entity));\n  }\n\n  static clone<T>(entity: T): T {\n    return Tranformer.classToClass<T>(entity);\n  }\n\n  static serialize<T>(entity: T): string {\n    return Tranformer.serialize(entity);\n  }\n\n  static deserialize<T>(entityClass: Clazz<T>, entity: string): T {\n    return Tranformer.deserialize(entityClass, entity);\n  }\n\n  static deserializeIterable<T>(entityClass: Clazz<T>, entity: string): T[] {\n    return Tranformer.deserializeArray(entityClass, entity);\n  }\n}\n","import { ClassTransformer, Clazz } from '../class/ClassTransformer';\nimport { Storage } from './Storage';\n\nexport class BaseLocalStorage<T> implements Storage<T> {\n  readonly key: string;\n  protected readonly entityClass: Clazz<T>;\n\n  constructor(key: string, entityClass: Clazz<T>) {\n    this.key = key;\n    this.entityClass = entityClass;\n  }\n\n  find(): T | null {\n    const data = localStorage.getItem(this.parseKey(this.key));\n    return data ? ClassTransformer.deserialize(this.entityClass, data) : null;\n  }\n\n  save(data: T | T[] | null): void {\n    localStorage.setItem(this.parseKey(this.key), ClassTransformer.serialize(data));\n  }\n\n  remove(): void {\n    localStorage.removeItem(this.parseKey(this.key));\n  }\n\n  protected parseKey(key: string): string {\n    let prefix = process.env.REACT_APP_STORAGE_KEY_PREFIX;\n    if (!prefix) {\n      prefix = '_';\n    }\n    return prefix + key;\n  }\n}\n","import { ClassTransformer } from '../class/ClassTransformer';\nimport { BaseLocalStorage } from './BaseLocalStorage';\n\nexport class BaseIterableLocalStorage<T> extends BaseLocalStorage<T> {\n  findAll(): T[] | null {\n    const data = localStorage.getItem(this.parseKey(this.key));\n    return data ? (ClassTransformer.deserializeIterable(this.entityClass, data) as T[]) : null;\n  }\n}\n","import { BaseIterableLocalStorage } from '../../../srorage/BaseIterableLocalStorage';\nimport { OrderItem } from './type/OrderItem';\n\nclass OrderItemEntity implements OrderItem {\n  product = '';\n  quantity = 0;\n  name = '';\n  image = '';\n  price = 0.0;\n  countInStock = 0;\n}\n\nexport class OrderItemStorage extends BaseIterableLocalStorage<OrderItem> {\n  constructor() {\n    super('CART_ORDER_ITEMS', OrderItemEntity);\n  }\n}\n","import { BaseLocalStorage } from '../../../srorage/BaseLocalStorage';\nimport { PaymentMethod } from './type/PaymentMethod';\n\nclass PaymentMethodEntity {\n  value!: PaymentMethod;\n}\n\nexport class PaymentMethodStorage extends BaseLocalStorage<PaymentMethodEntity> {\n  constructor() {\n    super('CART_PAYMENT_METHOD', PaymentMethodEntity);\n  }\n}\n","import { BaseLocalStorage } from '../../../srorage/BaseLocalStorage';\nimport { ShippingAddress } from './type/ShippingAddress';\n\nclass ShippingAddressEntity implements ShippingAddress {\n  address = '';\n  city = '';\n  postalCode = '';\n  country = '';\n}\n\nexport class ShippingAddressStorage extends BaseLocalStorage<ShippingAddress> {\n  constructor() {\n    super('CART_SHIPPING_ADDRESS', ShippingAddressEntity);\n  }\n}\n","import { ReducerAction } from '../../store/reducer/ReducerAction';\nimport { ReducerActionCreator } from '../../store/reducer/ReducerActionCreator';\nimport { OrderItemStorage } from './orderItem/OrderItemStorage';\nimport { OrderItem } from './orderItem/type/OrderItem';\nimport { PaymentMethodStorage } from './paymentMethod/PaymentMethodStorage';\nimport { PaymentMethod } from './paymentMethod/type/PaymentMethod';\nimport { ShippingAddressStorage } from './shippingAddress/ShippingAddressStorage';\nimport { ShippingAddress } from './shippingAddress/type/ShippingAddress';\n\ntype Action = ReducerAction<ActionType, Payload>;\nconst action = ReducerActionCreator<ActionType, Payload | Error>();\n\ntype Payload = Pick<OrderItem, 'product'> | OrderItem | ShippingAddress | PaymentMethod;\n\ntype ActionType =\n  | 'CART_REQUEST'\n  | 'CART_ADD_ORDER_ITEM'\n  | 'CART_REMOVE_ORDER_ITEM'\n  | 'CART_SAVE_SHIPPING_ADDRESS'\n  | 'CART_SAVE_PAYMENT_METHOD'\n  | 'CART_RESET'\n  | 'CART_ERROR';\n\nexport type CartState = {\n  loading: boolean;\n  data: {\n    orderItems: OrderItem[] | null;\n    shippingAddress: ShippingAddress | null;\n    paymentMethod: PaymentMethod | null;\n  };\n  error: Error | null;\n};\n\nconst getOrderItemsFromStorage = () => {\n  const orderItemStorage = new OrderItemStorage();\n  return orderItemStorage.findAll();\n};\n\nconst getShippingAddressFromStorage = () => {\n  const shippingAddressStorage = new ShippingAddressStorage();\n  return shippingAddressStorage.find();\n};\n\nconst getPaymentMethodFromStorage = () => {\n  const paymentMethodStorage = new PaymentMethodStorage();\n  const paymentMethodEntity = paymentMethodStorage.find();\n  return paymentMethodEntity ? paymentMethodEntity.value : null;\n};\n\nconst initialState: CartState = {\n  loading: false,\n  data: {\n    orderItems: getOrderItemsFromStorage(),\n    shippingAddress: getShippingAddressFromStorage(),\n    paymentMethod: getPaymentMethodFromStorage(),\n  },\n  error: null,\n};\n\nconst reducer = (state = initialState, action: Action): CartState => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'CART_REQUEST':\n      return load(state);\n    case 'CART_ADD_ORDER_ITEM':\n      return addOrderItem(state, payload as OrderItem);\n    case 'CART_REMOVE_ORDER_ITEM':\n      return removeOrderItem(state, payload as Pick<OrderItem, 'product'>);\n    case 'CART_SAVE_SHIPPING_ADDRESS':\n      return saveShippingAddress(state, payload as ShippingAddress);\n    case 'CART_SAVE_PAYMENT_METHOD':\n      return savePaymentMethod(state, payload as PaymentMethod);\n    case 'CART_RESET':\n      return reset();\n    case 'CART_ERROR':\n      return fail(state, payload as Error);\n    default:\n      return state;\n  }\n};\n\nconst load = (state: CartState): CartState => {\n  return { ...state, loading: true, error: null };\n};\n\nconst addOrderItem = (state: CartState, orderItemAdd: OrderItem): CartState => {\n  let { orderItems } = state.data;\n  if (!orderItems) {\n    orderItems = [];\n  }\n\n  const orderItemFound =\n    orderItems && orderItems.find((orderItem) => orderItem.product === orderItemAdd.product);\n\n  let orderItemsUpdated: OrderItem[] = [];\n  if (orderItemFound) {\n    const index = orderItems.findIndex((orderItem) => orderItem.product === orderItemFound.product);\n    const orderItemUpdated = { ...orderItemFound, quantity: orderItemAdd.quantity };\n    orderItemsUpdated = [...orderItems];\n    orderItemsUpdated[index] = orderItemUpdated;\n  } else {\n    orderItemsUpdated = [...orderItems, orderItemAdd];\n  }\n\n  return {\n    ...state,\n    data: {\n      ...state.data,\n      orderItems: orderItemsUpdated,\n    },\n    loading: false,\n    error: null,\n  };\n};\n\nconst removeOrderItem = (\n  state: CartState,\n  productItemRemove: Pick<OrderItem, 'product'>,\n): CartState => {\n  if (!state.data.orderItems) {\n    return state;\n  }\n\n  const itemsUpdated = state.data.orderItems.filter(\n    (item) => item.product !== productItemRemove.product,\n  );\n\n  return {\n    ...state,\n    data: {\n      ...state.data,\n      orderItems: itemsUpdated,\n    },\n    loading: false,\n    error: null,\n  };\n};\n\nconst saveShippingAddress = (state: CartState, shippingAddress: ShippingAddress): CartState => {\n  return {\n    ...state,\n    data: {\n      ...state.data,\n      shippingAddress,\n    },\n    loading: false,\n    error: null,\n  };\n};\n\nconst savePaymentMethod = (state: CartState, paymentMethod: PaymentMethod): CartState => {\n  return {\n    ...state,\n    data: {\n      ...state.data,\n      paymentMethod,\n    },\n    loading: false,\n    error: null,\n  };\n};\n\nconst reset = (): CartState => {\n  return initialState;\n};\n\nconst fail = (state: CartState, error: Error): CartState => {\n  return { ...state, loading: false, error };\n};\n\nexport const CartStore = {\n  action,\n  reducer,\n};\n","import { ReducerAction } from './ReducerAction';\n\nexport const ReducerActionCreator = <T, P>() => {\n  return (type: T, payload?: P): ReducerAction<T, P> => {\n    return { type, payload };\n  };\n};\n","import { Dispatch } from 'redux';\nimport { State } from '../../store/Store';\nimport { ProductApi } from '../product/ProductApi';\nimport { Product } from '../product/type/Product';\nimport { CartStore } from './CartStore';\nimport { OrderItemStorage } from './orderItem/OrderItemStorage';\nimport { OrderItem } from './orderItem/type/OrderItem';\nimport { PaymentMethodStorage } from './paymentMethod/PaymentMethodStorage';\nimport { PaymentMethod } from './paymentMethod/type/PaymentMethod';\nimport { ShippingAddressStorage } from './shippingAddress/ShippingAddressStorage';\nimport { ShippingAddress } from './shippingAddress/type/ShippingAddress';\n\nconst addOrderItem = (id: string, quantity: number) => async (\n  dispatch: Dispatch,\n  getState: () => State,\n): Promise<void> => {\n  try {\n    dispatch(CartStore.action('CART_REQUEST'));\n\n    const response = await ProductApi.findById(id);\n    if (response.error) {\n      dispatch(CartStore.action('CART_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data) {\n      return;\n    }\n\n    const product: Product = response.data;\n    const orderItem: OrderItem = {\n      product: product.id,\n      quantity,\n      name: product.name,\n      image: product.image,\n      price: product.price,\n      countInStock: product.countInStock,\n    };\n\n    dispatch(CartStore.action('CART_ADD_ORDER_ITEM', orderItem));\n\n    const cartStorage = new OrderItemStorage();\n    cartStorage.save(getState().cart.data.orderItems);\n  } catch (error) {\n    dispatch(CartStore.action('CART_ERROR', error));\n  }\n};\n\nconst removeOrderItem = (id: string) => (dispatch: Dispatch, getState: () => State): void => {\n  try {\n    const orderItem: Pick<OrderItem, 'product'> = {\n      product: id,\n    };\n\n    dispatch(CartStore.action('CART_REMOVE_ORDER_ITEM', orderItem));\n\n    const cartStorage = new OrderItemStorage();\n    cartStorage.save(getState().cart.data.orderItems);\n  } catch (error) {\n    CartStore.action('CART_ERROR', error);\n  }\n};\n\nconst saveShippingAddress = (shippingAddress: ShippingAddress) => (dispatch: Dispatch): void => {\n  try {\n    dispatch(CartStore.action('CART_SAVE_SHIPPING_ADDRESS', shippingAddress));\n\n    const shippingAddressStorage = new ShippingAddressStorage();\n    shippingAddressStorage.save(shippingAddress);\n  } catch (error) {\n    CartStore.action('CART_ERROR', error);\n  }\n};\n\nconst savePaymentMethod = (paymentMethod: PaymentMethod) => (dispatch: Dispatch): void => {\n  try {\n    dispatch(CartStore.action('CART_SAVE_PAYMENT_METHOD', paymentMethod));\n\n    const paymentMethodStorage = new PaymentMethodStorage();\n    paymentMethodStorage.save({ value: paymentMethod });\n  } catch (error) {\n    CartStore.action('CART_ERROR', error);\n  }\n};\n\nconst reset = () => (dispatch: Dispatch): void => {\n  try {\n    dispatch(CartStore.action('CART_RESET'));\n\n    const paymentMethodStorage = new PaymentMethodStorage();\n    paymentMethodStorage.remove();\n\n    const shippingAddressStorage = new ShippingAddressStorage();\n    shippingAddressStorage.remove();\n\n    const cartStorage = new OrderItemStorage();\n    cartStorage.remove();\n  } catch (error) {\n    CartStore.action('CART_ERROR', error);\n  }\n};\n\nexport const CartActions = {\n  addOrderItem,\n  removeOrderItem,\n  saveShippingAddress,\n  savePaymentMethod,\n  reset,\n};\n","const initSdk = (clientId: string, onLoadHandler: () => void): void => {\n  const script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.async = true;\n  script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n  script.onload = onLoadHandler;\n  document.body.appendChild(script);\n};\n\nexport const PayPalUtils = {\n  initSdk,\n};\n","import { BASE_URL } from '../../app/AppApi';\n\nconst getProductImageUrl = (imageName: string): string => {\n  return `${BASE_URL}/files/${imageName}`;\n};\n\nexport const ProductUtils = {\n  getProductImageUrl,\n};\n","import { AuthState } from './AuthStore';\n\nconst getToken = (authState: AuthState): string | null => {\n  return authState.data ? authState.data.authToken.token : null;\n};\n\nexport const AuthUtils = {\n  getToken,\n};\n","import { AppApi } from '../../app/AppApi';\nimport { Result } from '../../type/Result';\nimport { Config } from './type/Config';\n\nexport type ConfigApiResponse = Result<Config, Error>;\nconst baseUrl = '/configs';\n\nconst findById = async (id: keyof Config): Promise<ConfigApiResponse> => {\n  try {\n    const endpoint = `${baseUrl}/${id}`;\n\n    const response = await AppApi.baseApi.get<ConfigApiResponse>(endpoint);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const ConfigApi = {\n  findById,\n};\n","import { AxiosRequestConfig } from 'axios';\nimport { AppApi } from '../../app/AppApi';\nimport { PageableResult } from '../../type/PageableResult';\nimport { Result } from '../../type/Result';\nimport { PayPalPaymentResult } from '../payPal/PayPalPaymentResult';\nimport { Order } from './type/Order';\n\nexport type OrderApiPageResponse = PageableResult<Order, Error>;\nexport type OrderApiResponse = Result<Order, Error>;\nconst baseUrl = '/orders';\n\nconst findAll = async (\n  token: string | null,\n  queryByUserId: boolean,\n): Promise<OrderApiPageResponse> => {\n  try {\n    const endpoint = `${baseUrl}`;\n    const config: AxiosRequestConfig = {\n      headers: {\n        ...AppApi.getAuthorizationHeader(token),\n      },\n      params: {\n        byUserId: queryByUserId,\n      },\n    };\n\n    const response = await AppApi.baseApi.get<OrderApiPageResponse>(endpoint, config);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nconst findById = async (\n  token: string | null,\n  id: string,\n  queryByUserId: boolean,\n): Promise<OrderApiResponse> => {\n  try {\n    const endpoint = `${baseUrl}/${id}`;\n    const config: AxiosRequestConfig = {\n      headers: {\n        ...AppApi.getAuthorizationHeader(token),\n      },\n      params: {\n        byUserId: queryByUserId,\n      },\n    };\n\n    const response = await AppApi.baseApi.get<OrderApiResponse>(endpoint, config);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nconst save = async (token: string | null, entity: Order): Promise<OrderApiResponse> => {\n  try {\n    const endpoint = `${baseUrl}`;\n    const config: AxiosRequestConfig = {\n      headers: {\n        ...AppApi.getAuthorizationHeader(token),\n      },\n    };\n\n    const response = await AppApi.baseApi.post<OrderApiResponse>(endpoint, entity, config);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nconst updateById = async (\n  token: string | null,\n  id: string,\n  query: Partial<Order>,\n): Promise<OrderApiResponse> => {\n  try {\n    const endpoint = `${baseUrl}/${id}`;\n    const config: AxiosRequestConfig = {\n      headers: {\n        ...AppApi.getAuthorizationHeader(token),\n      },\n    };\n\n    const response = await AppApi.baseApi.patch<OrderApiResponse>(endpoint, query, config);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nconst pay = async (\n  token: string | null,\n  id: string,\n  query: { paymentResult: PayPalPaymentResult },\n): Promise<OrderApiResponse> => {\n  try {\n    const endpoint = `${baseUrl}/${id}`;\n    const config: AxiosRequestConfig = {\n      headers: {\n        ...AppApi.getAuthorizationHeader(token),\n      },\n      params: {\n        payOrder: true,\n      },\n    };\n\n    const response = await AppApi.baseApi.patch<OrderApiResponse>(endpoint, query, config);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const OrderApi = {\n  findAll,\n  findById,\n  save,\n  updateById,\n  pay,\n};\n","import { ReducerAction } from '../../store/reducer/ReducerAction';\nimport { ReducerActionCreator } from '../../store/reducer/ReducerActionCreator';\nimport { Config } from '../config/type/Config';\nimport { OrderApiPageResponse } from './OrderApi';\nimport { Order } from './type/Order';\n\ntype Action = ReducerAction<ActionType, Payload>;\nconst action = ReducerActionCreator<ActionType, Payload | Error>();\n\ntype Orders = Pick<OrderApiPageResponse, 'data' | 'paginator'>;\ntype Payload = Order | Orders | Config;\n\ntype ActionType =\n  | 'ORDER_REQUEST'\n  | 'ORDER_FIND_ALL'\n  | 'ORDER_FIND_BY_ID'\n  | 'ORDER_SAVE'\n  | 'ORDER_UPDATE_BY_ID'\n  | 'ORDER_PAY'\n  | 'ORDER_CONFIG_FIND_BY_ID'\n  | 'ORDER_RESET'\n  | 'ORDER_ERROR';\n\nexport type OrderState = {\n  loading: boolean;\n  data: {\n    order: Order | null;\n    orders: Orders | null;\n    config: Config | null;\n  };\n  error: Error | null;\n};\n\nconst initialState: OrderState = {\n  loading: false,\n  data: {\n    order: null,\n    orders: null,\n    config: null,\n  },\n  error: null,\n};\n\nconst reducer = (state = initialState, action: Action): OrderState => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'ORDER_REQUEST':\n      return { ...state, loading: true, error: null };\n    case 'ORDER_FIND_ALL':\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        data: {\n          ...state.data,\n          orders: payload as Orders,\n        },\n      };\n    case 'ORDER_FIND_BY_ID':\n    case 'ORDER_SAVE':\n    case 'ORDER_UPDATE_BY_ID':\n    case 'ORDER_PAY':\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        data: {\n          ...state.data,\n          order: payload as Order,\n        },\n      };\n    case 'ORDER_CONFIG_FIND_BY_ID':\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        data: {\n          ...state.data,\n          config: payload as Config,\n        },\n      };\n    case 'ORDER_RESET':\n      return initialState;\n    case 'ORDER_ERROR':\n      return { ...state, loading: false, error: payload as Error };\n    default:\n      return state;\n  }\n};\n\nexport const OrderStore = {\n  action,\n  reducer,\n};\n","import { Dispatch } from 'redux';\nimport { State } from '../../store/Store';\nimport { AuthUtils } from '../auth/AuthUtils';\nimport { ConfigApi } from '../config/ConfigApi';\nimport { Config } from '../config/type/Config';\nimport { PayPalPaymentResult } from '../payPal/PayPalPaymentResult';\nimport { OrderApi } from './OrderApi';\nimport { OrderStore } from './OrderStore';\nimport { Order } from './type/Order';\n\nconst findAll = (queryByUserId: boolean) => async (\n  dispatch: Dispatch,\n  getState: () => State,\n): Promise<void> => {\n  try {\n    dispatch(OrderStore.action('ORDER_REQUEST'));\n\n    const token = AuthUtils.getToken(getState().auth);\n\n    const response = await OrderApi.findAll(token, queryByUserId);\n    if (response.error) {\n      dispatch(OrderStore.action('ORDER_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data || !response.paginator) {\n      return;\n    }\n\n    const { data, paginator } = response;\n\n    dispatch(OrderStore.action('ORDER_FIND_ALL', { data, paginator }));\n  } catch (error) {\n    dispatch(OrderStore.action('ORDER_ERROR', error));\n  }\n};\n\nconst findById = (id: string, queryByUserId: boolean) => async (\n  dispatch: Dispatch,\n  getState: () => State,\n): Promise<void> => {\n  try {\n    dispatch(OrderStore.action('ORDER_REQUEST'));\n\n    const token = AuthUtils.getToken(getState().auth);\n\n    const response = await OrderApi.findById(token, id, queryByUserId);\n    if (response.error) {\n      dispatch(OrderStore.action('ORDER_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data) {\n      return;\n    }\n\n    dispatch(OrderStore.action('ORDER_FIND_BY_ID', response.data));\n  } catch (error) {\n    dispatch(OrderStore.action('ORDER_ERROR', error));\n  }\n};\n\nconst save = (order: Order) => async (dispatch: Dispatch, getState: () => State): Promise<void> => {\n  try {\n    dispatch(OrderStore.action('ORDER_REQUEST'));\n\n    const token = AuthUtils.getToken(getState().auth);\n\n    const response = await OrderApi.save(token, order);\n    if (response.error) {\n      dispatch(OrderStore.action('ORDER_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data) {\n      return;\n    }\n\n    dispatch(OrderStore.action('ORDER_SAVE', response.data));\n  } catch (error) {\n    dispatch(OrderStore.action('ORDER_ERROR', error));\n  }\n};\n\nconst updateById = (id: string, query: Partial<Order>) => async (\n  dispatch: Dispatch,\n  getState: () => State,\n): Promise<void> => {\n  try {\n    dispatch(OrderStore.action('ORDER_REQUEST'));\n\n    const token = AuthUtils.getToken(getState().auth);\n\n    const response = await OrderApi.updateById(token, id, query);\n    if (response.error) {\n      dispatch(OrderStore.action('ORDER_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data) {\n      return;\n    }\n\n    dispatch(OrderStore.action('ORDER_UPDATE_BY_ID', response.data));\n  } catch (error) {\n    dispatch(OrderStore.action('ORDER_ERROR', error));\n  }\n};\n\nconst configFindById = (id: keyof Config) => async (dispatch: Dispatch): Promise<void> => {\n  try {\n    dispatch(OrderStore.action('ORDER_REQUEST'));\n\n    const response = await ConfigApi.findById(id);\n    if (response.error) {\n      dispatch(OrderStore.action('ORDER_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data) {\n      return;\n    }\n\n    dispatch(OrderStore.action('ORDER_CONFIG_FIND_BY_ID', response.data));\n  } catch (error) {\n    dispatch(OrderStore.action('ORDER_ERROR', error));\n  }\n};\n\nconst pay = (id: string, paymentResult: { paymentResult: PayPalPaymentResult }) => async (\n  dispatch: Dispatch,\n  getState: () => State,\n): Promise<void> => {\n  try {\n    dispatch(OrderStore.action('ORDER_REQUEST'));\n\n    const token = AuthUtils.getToken(getState().auth);\n\n    const response = await OrderApi.pay(token, id, paymentResult);\n    if (response.error) {\n      dispatch(OrderStore.action('ORDER_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data) {\n      return;\n    }\n\n    dispatch(OrderStore.action('ORDER_PAY', response.data));\n  } catch (error) {\n    dispatch(OrderStore.action('ORDER_ERROR', error));\n  }\n};\n\nconst reset = () => async (dispatch: Dispatch): Promise<void> => {\n  try {\n    dispatch(OrderStore.action('ORDER_RESET'));\n  } catch (error) {\n    dispatch(OrderStore.action('ORDER_ERROR', error));\n  }\n};\n\nexport const OrderActions = {\n  findAll,\n  findById,\n  save,\n  updateById,\n  configFindById,\n  pay,\n  reset,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Alert, Button, Card, Col, Image, ListGroup, Row } from 'react-bootstrap';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { State } from '../../store/Store';\nimport { StoreError } from '../../store/StoreError';\nimport { StoreLoader } from '../../store/StoreLoader';\nimport { NumberUtils } from '../../utils/NumberUtils';\nimport { useUserAuthenticator } from '../auth/useUserAuthenticator';\nimport { CartActions } from '../cart/CartActions';\nimport { PayPalPaymentResult } from '../payPal/PayPalPaymentResult';\nimport { PayPalUtils } from '../payPal/PayPalUtils';\nimport { ProductUtils } from '../product/ProductUtils';\nimport { User } from '../user/type/User';\nimport { OrderActions } from './OrderActions';\nimport { Order as OrderType } from './type/Order';\n\ntype Params = {\n  id: string;\n};\n\ntype Props = {\n  queryByUserId: boolean;\n};\n\nexport const Order = (props: Props): JSX.Element => {\n  useUserAuthenticator();\n\n  const dispatch = useDispatch();\n  const { id } = useParams<Params>();\n  const { queryByUserId } = props;\n\n  const orderState = useSelector((state: State) => state.order);\n  const { loading, data, error } = orderState;\n  const order = data.order;\n  const user = order && order.user ? (order.user as User) : null;\n  const payPalClientId = (data.config && data.config.payPalClientId) ?? undefined;\n\n  const [payPalSdkReady, setPayPalSdkReady] = useState(false);\n\n  const authState = useSelector((state: State) => state.auth);\n  const { data: authData } = authState;\n\n  useEffect(() => {\n    dispatch(OrderActions.findById(id, queryByUserId));\n  }, [dispatch, id, queryByUserId]);\n\n  useEffect(() => {\n    dispatch(OrderActions.configFindById('payPalClientId'));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (payPalClientId) {\n      PayPalUtils.initSdk(payPalClientId, () => setPayPalSdkReady(true));\n    }\n  }, [payPalClientId]);\n\n  const payOrderWithPayPalHandler = (paymentResult: PayPalPaymentResult) => {\n    dispatch(OrderActions.pay(id, { paymentResult }));\n    dispatch(CartActions.reset());\n  };\n\n  const isPayOrderWithPayPal = (): boolean => {\n    return !loading && !error && payPalSdkReady && !!order && !order.isPaid && order.totalPrice > 0;\n  };\n\n  const orderDeliveredHandler = () => {\n    const query: Partial<OrderType> = {\n      isDelivered: true,\n      deliveredAt: new Date(),\n    };\n    dispatch(OrderActions.updateById(id, query));\n  };\n\n  const orderDeliveredHandlerEnabled = (): boolean => {\n    return !!(order && !order.isDelivered && order.isPaid);\n  };\n\n  return (\n    <>\n      {loading && <StoreLoader />}\n      {error && <StoreError error={error} />}\n      <h2>Order {order && order.id}</h2>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            {user && (\n              <ListGroup.Item>\n                <h2>Customer</h2>\n                <p>{user.name}</p>\n                <p>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </p>\n              </ListGroup.Item>\n            )}\n\n            {order && order.shippingAddress && (\n              <ListGroup.Item>\n                <h2>Shipping</h2>\n                <p>\n                  {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                  {order.shippingAddress.postalCode}, {order.shippingAddress.country}\n                </p>\n                {order.isDelivered ? (\n                  <Alert variant='success'>Delivered on {order.deliveredAt}</Alert>\n                ) : (\n                  <Alert variant='danger'>Not delivered</Alert>\n                )}\n              </ListGroup.Item>\n            )}\n\n            {order && order.paymentMethod && (\n              <ListGroup.Item>\n                <h2>Payment</h2>\n                <p>{order.paymentMethod}</p>\n                {order.isPaid ? (\n                  <Alert variant='success'>Paid on {order.paidAt}</Alert>\n                ) : (\n                  <Alert variant='danger'>Not paid</Alert>\n                )}\n              </ListGroup.Item>\n            )}\n\n            <ListGroup.Item>\n              <h2>Items</h2>\n              <ListGroup variant='flush'>\n                {order &&\n                  order.orderItems &&\n                  order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={2}>\n                          <Image\n                            src={ProductUtils.getProductImageUrl(item.image)}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col md={6}>{item.name}</Col>\n                        <Col md={4}>\n                          {item.quantity} x ${item.price} = $\n                          {NumberUtils.toFixed(item.quantity * item.price)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n              </ListGroup>\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${NumberUtils.toFixed(order ? order.orderItemsPrice : 0)}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${NumberUtils.toFixed(order ? order.shippingPrice : 0)}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${NumberUtils.toFixed(order ? order.taxPrice : 0)}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${NumberUtils.toFixed(order ? order.totalPrice : 0)}</Col>\n                </Row>\n              </ListGroup.Item>\n              {isPayOrderWithPayPal() && (\n                <ListGroup.Item>\n                  <PayPalButton\n                    amount={(order && order.totalPrice) ?? 0}\n                    onSuccess={payOrderWithPayPalHandler}\n                  />\n                </ListGroup.Item>\n              )}\n              {authData && authData.user.isAdmin && (\n                <ListGroup.Item>\n                  <Button\n                    type='button'\n                    className='btn btn-block'\n                    disabled={!orderDeliveredHandlerEnabled()}\n                    onClick={orderDeliveredHandler}\n                  >\n                    Mark As Delivered\n                  </Button>\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { Order } from '../components/order/Order';\n\nexport const AdminOrderScreen = (): JSX.Element => {\n  return <Order queryByUserId={false} />;\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect } from 'react';\nimport { Button, Row, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { RouterEndpoint } from '../../../router/RouterEndpoint';\nimport { State } from '../../../store/Store';\nimport { StoreError } from '../../../store/StoreError';\nimport { StoreLoader } from '../../../store/StoreLoader';\nimport { useUserAuthenticator } from '../../auth/useUserAuthenticator';\nimport { OrderActions } from '../OrderActions';\n\ntype Props = {\n  queryByUserId: boolean;\n};\n\nexport const Orders = (props: Props): JSX.Element => {\n  useUserAuthenticator();\n\n  const dispatch = useDispatch();\n  const { queryByUserId } = props;\n\n  const orderState = useSelector((state: State) => state.order);\n  const { loading, data, error } = orderState;\n  const orders = (data.orders && data.orders.data) ?? null;\n\n  useEffect(() => {\n    dispatch(OrderActions.findAll(queryByUserId));\n  }, [dispatch, queryByUserId]);\n\n  return (\n    <>\n      {loading && <StoreLoader />}\n      {error && <StoreError error={error} />}\n      <h4>{queryByUserId ? 'My Orders' : 'All Orders'}</h4>\n      <Row>\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders &&\n              orders.map((order) => (\n                <tr key={order.id}>\n                  <td>{order.id}</td>\n                  <td>{order.createdAt && order.createdAt.substring(0, 10)}</td>\n                  <td>${order.totalPrice}</td>\n                  <td>\n                    {order.isPaid && order.paidAt ? (\n                      order.paidAt.toString().substring(0, 10)\n                    ) : (\n                      <FontAwesomeIcon icon={['fas', 'times']} color='red' />\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered && order.deliveredAt ? (\n                      order.deliveredAt.toString().substring(0, 10)\n                    ) : (\n                      <FontAwesomeIcon icon={['fas', 'times']} color='red' />\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={RouterEndpoint.userOrders(order.id)}>\n                      <Button variant='light' className='btn-sm'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { Orders } from '../components/order/orders/Orders';\n\nexport const AdminOrdersScreen = (): JSX.Element => {\n  return <Orders queryByUserId={false} />;\n};\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { RouterEndpoint } from '../../router/RouterEndpoint';\nimport { State } from '../../store/Store';\n\nexport const useUserAdminAuthenticator = (redirect?: string): void => {\n  const history = useHistory();\n\n  const authState = useSelector((state: State) => state.auth);\n  const { data } = authState;\n\n  useEffect(() => {\n    if (!(data && data.user.isAdmin)) {\n      history.push(RouterEndpoint.unauthorized());\n    }\n  }, [data, history, redirect]);\n};\n","import React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const JustifyCenter = (props: Props): JSX.Element => {\n  const { children } = props;\n\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  error?: string;\n};\n\nexport const FormControlError = (props: Props): JSX.Element | null => {\n  const { error } = props;\n\n  if (!error) {\n    return null;\n  }\n\n  const errors = [...error];\n  return (\n    <div>\n      {errors.map((error, index) => (\n        <span key={index} style={styles.container}>\n          {error}\n        </span>\n      ))}\n    </div>\n  );\n};\n\ntype Styles = {\n  container: React.CSSProperties;\n};\n\nconst styles: Styles = {\n  container: { display: 'block', color: 'red' },\n};\n","import { GenericFieldHTMLAttributes, useField } from 'formik';\nimport React, { useState } from 'react';\nimport { Form, FormControlProps } from 'react-bootstrap';\nimport { FormControlError } from './FormControlError';\n\n// controlRef example:\n// const controlRef = useRef<HTMLInputElement>(null);\n// const focusFormField = () => {\n//   controlRef && controlRef.current && controlRef.current.focus();\n// };\n\n// callbackRef example:\n// const callbackRef = (inputElement: HTMLInputElement) => {\n//   inputElement && inputElement.focus();\n// };\n\ntype Props<T> = GenericFieldHTMLAttributes &\n  FormControlProps & {\n    schema: T;\n    id: Extract<keyof T, string>;\n    label?: string;\n    helpText?: string;\n    instantFeedback?: boolean;\n    controlRef?: React.RefObject<HTMLInputElement>;\n    callbackRef?: (inputElement: HTMLInputElement) => void;\n  };\n\nexport const FormControl = <T,>(props: React.PropsWithChildren<Props<T>>): JSX.Element => {\n  const {\n    id,\n    label,\n    helpText,\n    instantFeedback = false,\n    controlRef,\n    callbackRef,\n    ...restProps\n  } = props;\n  const [field, meta] = useField(id);\n\n  // Display isValid status icon if:\n  // - instantFeedback is enabled\n  // - AND the input is focused AND value is longer than 2 characters or the input has been visited\n  // - AND there are no errors\n  const [didFocus, setDidFocus] = useState(false);\n  const onFocusHandler = () => setDidFocus(true);\n  const isValid =\n    instantFeedback && ((didFocus && field.value.trim().length > 2) || meta.touched) && !meta.error;\n\n  const isInvalid = !!(meta.touched && meta.error);\n\n  return (\n    <Form.Group controlId={id}>\n      {label && <Form.Label>{label}</Form.Label>}\n\n      <Form.Control\n        {...field}\n        {...restProps}\n        isValid={isValid}\n        isInvalid={isInvalid}\n        name={id}\n        ref={controlRef ? controlRef : callbackRef}\n        onFocus={onFocusHandler}\n      />\n      {!isInvalid && helpText && <div className='text-muted'>{helpText}</div>}\n      {isInvalid && <FormControlError error={meta.error} />}\n    </Form.Group>\n  );\n};\n","import * as Validator from 'class-validator';\n\nexport class ClassValidator {\n  static async validate(\n    obj: Object,\n    skipMissingProperties: boolean,\n  ): Promise<Record<string, string[]>> {\n    try {\n      const options: Validator.ValidatorOptions = {\n        skipUndefinedProperties: false,\n        skipNullProperties: false,\n        skipMissingProperties,\n        dismissDefaultMessages: false,\n        validationError: {\n          target: true,\n          value: true,\n        },\n        forbidUnknownValues: true,\n      };\n\n      const errors = await Validator.validate(obj, options);\n      if (errors.length === 0) {\n        return Promise.resolve({});\n      }\n\n      const errorsUpdated = this.reduceErrors({}, errors);\n      return Promise.resolve(errorsUpdated);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  }\n\n  private static reduceErrors(\n    accumulator: Record<string, string[]>,\n    errors: Validator.ValidationError[],\n  ): Record<string, string[]> {\n    let accumulatorUpdated = { ...accumulator };\n    errors.forEach((error) => {\n      if (error.constraints) {\n        accumulatorUpdated[error.property] = Object.values(error.constraints);\n      }\n      if (error.children) {\n        accumulatorUpdated = this.reduceErrors(accumulatorUpdated, error.children);\n      }\n    });\n    return accumulatorUpdated;\n  }\n}\n","import { FormikErrors, FormikProps } from 'formik';\nimport { ClassTransformer, Clazz } from '../../class/ClassTransformer';\nimport { ClassValidator } from '../../class/ClassValidator';\n\nconst getState = <T>(values: T, entityClass: Clazz<T>): T => {\n  return ClassTransformer.fromPlain(entityClass, values);\n};\n\nconst validate = async <T>(values: T, entityClass: Clazz<T>): Promise<FormikErrors<T>> => {\n  try {\n    const formState = getState(values, entityClass);\n    const formErrors = await ClassValidator.validate(formState, false);\n    return Promise.resolve(formErrors as FormikErrors<T>);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nconst isSubmittable = <T>(form: FormikProps<T>): boolean => {\n  return !form.isValidating && !form.isSubmitting && form.dirty && form.isValid;\n};\n\nexport const FormUtils = {\n  getState,\n  validate,\n  isSubmittable,\n};\n","import { AxiosRequestConfig } from 'axios';\nimport { AppApi } from '../../app/AppApi';\nimport { Result } from '../../type/Result';\nimport { Review } from './type/Review';\n\nexport type ReviewApiResponse = Result<Review, Error>;\nconst baseUrl = '/reviews';\n\nconst save = async (token: string | null, entity: Review): Promise<ReviewApiResponse> => {\n  try {\n    const endpoint = `${baseUrl}`;\n    const config: AxiosRequestConfig = {\n      headers: {\n        ...AppApi.getAuthorizationHeader(token),\n      },\n    };\n\n    const response = await AppApi.baseApi.post<ReviewApiResponse>(endpoint, entity, config);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const ReviewApi = {\n  save,\n};\n","import { ReducerAction } from '../../store/reducer/ReducerAction';\nimport { ReducerActionCreator } from '../../store/reducer/ReducerActionCreator';\nimport { ProductApiPageResponse } from './ProductApi';\nimport { Product } from './type/Product';\n\ntype Action = ReducerAction<ActionType, Payload>;\nconst action = ReducerActionCreator<ActionType, Payload | Error>();\n\ntype Products = Pick<ProductApiPageResponse, 'data' | 'paginator'>;\ntype ProductId = Pick<Product, 'id'>;\ntype Payload = Product | Products | ProductId;\n\ntype ActionType =\n  | 'PRODUCT_REQUEST'\n  | 'PRODUCT_FIND_ALL'\n  | 'PRODUCT_FIND_TOP_RATAED'\n  | 'PRODUCT_FIND_BY_ID'\n  | 'PRODUCT_SAVE'\n  | 'PRODUCT_UPDATE_BY_ID'\n  | 'PRODUCT_DELETE_BY_ID'\n  | 'PRODUCT_SAVE_REVIEW'\n  | 'PRODUCT_RESET_PRODUCT'\n  | 'PRODUCT_ERROR';\n\nexport type ProductState = {\n  loading: boolean;\n  data: {\n    product: Product | null;\n    products: Products | null;\n    productsTopRated: Products | null;\n    review: boolean;\n  };\n  error: Error | null;\n};\n\nconst initialState: ProductState = {\n  loading: false,\n  data: {\n    product: null,\n    products: null,\n    productsTopRated: null,\n    review: false,\n  },\n  error: null,\n};\n\nconst reducer = (state = initialState, action: Action): ProductState => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'PRODUCT_REQUEST':\n      return { ...state, loading: true, error: null };\n    case 'PRODUCT_FIND_ALL':\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        data: {\n          ...state.data,\n          products: payload as Products,\n        },\n      };\n    case 'PRODUCT_FIND_TOP_RATAED':\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        data: {\n          ...state.data,\n          productsTopRated: payload as Products,\n        },\n      };\n    case 'PRODUCT_FIND_BY_ID':\n    case 'PRODUCT_SAVE':\n    case 'PRODUCT_UPDATE_BY_ID':\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        data: {\n          ...state.data,\n          product: payload as Product,\n        },\n      };\n    case 'PRODUCT_DELETE_BY_ID':\n      return deleteById(state, payload as ProductId);\n\n    case 'PRODUCT_SAVE_REVIEW':\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        data: {\n          ...state.data,\n          review: true,\n        },\n      };\n    case 'PRODUCT_RESET_PRODUCT':\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        data: {\n          ...state.data,\n          product: null,\n          productsTopRated: null,\n          review: false,\n        },\n      };\n    case 'PRODUCT_ERROR':\n      return { ...state, loading: false, error: payload as Error };\n    default:\n      return state;\n  }\n};\n\nconst deleteById = (state: ProductState, payload: ProductId): ProductState => {\n  if (!state.data.products) {\n    return state;\n  }\n\n  const productsDataUpdated = state.data.products.data.filter(\n    (product) => product.id !== payload.id,\n  );\n\n  return {\n    ...state,\n    loading: false,\n    error: null,\n    data: {\n      ...state.data,\n      products: {\n        ...state.data.products,\n        data: productsDataUpdated,\n      },\n    },\n  };\n};\n\nexport const ProductStore = {\n  action,\n  reducer,\n};\n","import { Dispatch } from 'redux';\nimport { State } from '../../store/Store';\nimport { AuthUtils } from '../auth/AuthUtils';\nimport { ReviewApi } from '../review/ReviewApi';\nimport { Review } from '../review/type/Review';\nimport { ProductApi } from './ProductApi';\nimport { ProductStore } from './ProductStore';\nimport { Product } from './type/Product';\n\nconst findAll = (keyword?: string, page?: string, pageLimit?: string, sort?: string) => async (\n  dispatch: Dispatch,\n): Promise<void> => {\n  try {\n    dispatch(ProductStore.action('PRODUCT_REQUEST'));\n\n    const response = await ProductApi.findAll(keyword, page, pageLimit, sort);\n    if (response.error) {\n      dispatch(ProductStore.action('PRODUCT_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data || !response.paginator) {\n      return;\n    }\n\n    const { data, paginator } = response;\n\n    dispatch(ProductStore.action('PRODUCT_FIND_ALL', { data, paginator }));\n  } catch (error) {\n    dispatch(ProductStore.action('PRODUCT_ERROR', error));\n  }\n};\n\nconst findTopRated = () => async (dispatch: Dispatch): Promise<void> => {\n  try {\n    dispatch(ProductStore.action('PRODUCT_REQUEST'));\n\n    const keyword = undefined;\n    const page = undefined;\n    const response = await ProductApi.findAll(keyword, page, '3', '-rating');\n    if (response.error) {\n      dispatch(ProductStore.action('PRODUCT_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data || !response.paginator) {\n      return;\n    }\n\n    const { data, paginator } = response;\n\n    dispatch(ProductStore.action('PRODUCT_FIND_TOP_RATAED', { data, paginator }));\n  } catch (error) {\n    dispatch(ProductStore.action('PRODUCT_ERROR', error));\n  }\n};\n\nconst findById = (id: string) => async (dispatch: Dispatch): Promise<void> => {\n  try {\n    dispatch(ProductStore.action('PRODUCT_REQUEST'));\n\n    const response = await ProductApi.findById(id);\n    if (response.error) {\n      dispatch(ProductStore.action('PRODUCT_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data) {\n      return;\n    }\n\n    dispatch(ProductStore.action('PRODUCT_FIND_BY_ID', response.data));\n  } catch (error) {\n    dispatch(ProductStore.action('PRODUCT_ERROR', error));\n  }\n};\n\nconst save = (product: Product) => async (\n  dispatch: Dispatch,\n  getState: () => State,\n): Promise<void> => {\n  try {\n    dispatch(ProductStore.action('PRODUCT_REQUEST'));\n\n    const token = AuthUtils.getToken(getState().auth);\n\n    const response = await ProductApi.save(token, product);\n    if (response.error) {\n      dispatch(ProductStore.action('PRODUCT_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data) {\n      return;\n    }\n\n    dispatch(ProductStore.action('PRODUCT_SAVE', response.data));\n  } catch (error) {\n    dispatch(ProductStore.action('PRODUCT_ERROR', error));\n  }\n};\n\nconst updateById = (id: string, query: Partial<Product>) => async (\n  dispatch: Dispatch,\n  getState: () => State,\n): Promise<void> => {\n  try {\n    dispatch(ProductStore.action('PRODUCT_REQUEST'));\n\n    const token = AuthUtils.getToken(getState().auth);\n\n    const response = await ProductApi.updateById(token, id, query);\n    if (response.error) {\n      dispatch(ProductStore.action('PRODUCT_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data) {\n      return;\n    }\n\n    dispatch(ProductStore.action('PRODUCT_UPDATE_BY_ID', response.data));\n  } catch (error) {\n    dispatch(ProductStore.action('PRODUCT_ERROR', error));\n  }\n};\n\nconst deleteById = (id: string) => async (\n  dispatch: Dispatch,\n  getState: () => State,\n): Promise<void> => {\n  try {\n    dispatch(ProductStore.action('PRODUCT_REQUEST'));\n\n    const token = AuthUtils.getToken(getState().auth);\n\n    await ProductApi.deleteById(token, id);\n\n    dispatch(ProductStore.action('PRODUCT_DELETE_BY_ID', { id }));\n  } catch (error) {\n    dispatch(ProductStore.action('PRODUCT_ERROR', error));\n  }\n};\n\nconst resetProduct = () => async (dispatch: Dispatch): Promise<void> => {\n  try {\n    dispatch(ProductStore.action('PRODUCT_RESET_PRODUCT'));\n  } catch (error) {\n    dispatch(ProductStore.action('PRODUCT_ERROR', error));\n  }\n};\n\nconst saveReview = (review: Review) => async (\n  dispatch: Dispatch,\n  getState: () => State,\n): Promise<void> => {\n  try {\n    dispatch(ProductStore.action('PRODUCT_REQUEST'));\n\n    const token = AuthUtils.getToken(getState().auth);\n\n    const response = await ReviewApi.save(token, review);\n    if (response.error) {\n      dispatch(ProductStore.action('PRODUCT_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data) {\n      return;\n    }\n\n    dispatch(ProductStore.action('PRODUCT_SAVE_REVIEW'));\n  } catch (error) {\n    dispatch(ProductStore.action('PRODUCT_ERROR', error));\n  }\n};\n\nexport const ProductActions = {\n  findAll,\n  findTopRated,\n  findById,\n  save,\n  updateById,\n  deleteById,\n  saveReview,\n  resetProduct,\n};\n","import { Expose } from 'class-transformer';\nimport { IsNotEmpty, IsNumber, IsString } from 'class-validator';\nimport { Product } from '../type/Product';\n\nexport class ProductForm implements Partial<Product> {\n  @Expose()\n  @IsString()\n  @IsNotEmpty()\n  name = '';\n\n  @Expose()\n  @IsString()\n  @IsNotEmpty()\n  image = '';\n\n  @Expose()\n  @IsString()\n  @IsNotEmpty()\n  description = '';\n\n  @Expose()\n  @IsString()\n  @IsNotEmpty()\n  brand = '';\n\n  @Expose()\n  @IsString()\n  @IsNotEmpty()\n  category = '';\n\n  @Expose()\n  @IsNumber()\n  @IsNotEmpty()\n  price = 0.0;\n\n  @Expose()\n  @IsNumber()\n  @IsNotEmpty()\n  countInStock = 0;\n}\n","import { Formik, FormikErrors, FormikHelpers, FormikProps } from 'formik';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { ClassTransformer } from '../../../class/ClassTransformer';\nimport { RouterEndpoint } from '../../../router/RouterEndpoint';\nimport { State } from '../../../store/Store';\nimport { StoreError } from '../../../store/StoreError';\nimport { StoreLoader } from '../../../store/StoreLoader';\nimport { useUserAdminAuthenticator } from '../../auth/useUserAdminAuthenticator';\nimport { JustifyCenter } from '../../content/JustifyCenter';\nimport { FormControl } from '../../form/FormControl';\nimport { FormUtils } from '../../form/FormUtils';\nimport { ProductActions } from '../ProductActions';\nimport { ProductApi } from '../ProductApi';\nimport { Product as ProductType } from '../type/Product';\nimport { ProductForm } from './ProductForm';\n\ntype Params = {\n  id: string;\n};\n\nexport const Product = (): JSX.Element => {\n  useUserAdminAuthenticator();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { id } = useParams<Params>();\n  const isCreate = !id;\n\n  const productState = useSelector((state: State) => state.product);\n  const { loading, data, error } = productState;\n  const product = data.product;\n\n  const authState = useSelector((state: State) => state.auth);\n  const { data: authData } = authState;\n  const userId = authData ? authData.user.id : '';\n\n  const [fileUploading, setFileUploading] = useState(false);\n\n  useEffect(() => {\n    if (!isCreate) {\n      dispatch(ProductActions.findById(id));\n    }\n  }, [isCreate, dispatch, id]);\n\n  useEffect(() => {\n    if (isCreate && product) {\n      history.push(RouterEndpoint.adminProducts(product.id));\n    }\n  }, [isCreate, product, history]);\n\n  const initialFormState = useMemo(() => ClassTransformer.fromPlain(ProductForm, product), [\n    product,\n  ]);\n\n  const validateFormHandler = async (values: ProductForm): Promise<FormikErrors<ProductForm>> => {\n    try {\n      const result = await FormUtils.validate(values, ProductForm);\n      return Promise.resolve(result);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  const isFormSubmittable = (form: FormikProps<ProductForm>) => {\n    return FormUtils.isSubmittable(form);\n  };\n\n  const submitFormHandler = async (\n    values: ProductForm,\n    FormActions: FormikHelpers<ProductForm>,\n  ): Promise<void> => {\n    const formState = FormUtils.getState(values, ProductForm);\n\n    if (isCreate) {\n      const product: ProductType = {\n        ...formState,\n        id: '',\n        user: userId,\n        rating: 0.0,\n        numReviews: 0,\n      };\n      dispatch(ProductActions.save(product));\n    } else {\n      dispatch(ProductActions.updateById(id, formState));\n    }\n\n    FormActions.setSubmitting(false);\n  };\n\n  const getSubmitTitle = (form: FormikProps<ProductForm>) => {\n    switch (isCreate) {\n      case true:\n        return form.isSubmitting ? 'Saving...' : 'Save';\n      default:\n        return form.isSubmitting ? 'Updating...' : 'Update';\n    }\n  };\n\n  const uploadFileHandler = async (\n    e: React.ChangeEvent<HTMLInputElement>,\n    form: FormikProps<ProductForm>,\n  ) => {\n    const fileList = e.target.files;\n    if (!fileList) {\n      return;\n    }\n    const file = fileList[0];\n    if (!file) {\n      return;\n    }\n\n    const fieldName = 'image';\n    const formData = new FormData();\n    formData.append(fieldName, file);\n\n    try {\n      setFileUploading(true);\n\n      const response = await ProductApi.uploadImage(fieldName, formData);\n\n      if (response.error) {\n        setFileUploading(false);\n        throw response.error;\n      }\n\n      if (!response.data) {\n        setFileUploading(false);\n        return;\n      }\n\n      form.setFieldValue('image', response.data.name);\n      setFileUploading(false);\n    } catch (error) {\n      setFileUploading(false);\n      Promise.reject(error);\n    }\n  };\n\n  return (\n    <>\n      {loading && <StoreLoader />}\n      {error && <StoreError error={error} />}\n      <JustifyCenter>\n        <h1>{isCreate ? 'Create Product' : 'Edit Product'}</h1>\n        <Formik\n          enableReinitialize={true}\n          initialValues={initialFormState ?? new ProductForm()}\n          validate={validateFormHandler}\n          onSubmit={submitFormHandler}\n        >\n          {(form) => (\n            <>\n              <Form\n                onSubmit={(e: React.FormEvent<HTMLFormElement>) => form.handleSubmit(e)}\n                noValidate\n              >\n                <FormControl\n                  schema={form.values}\n                  id='name'\n                  type='text'\n                  label='Name'\n                  placeholder='Name'\n                />\n                <FormControl\n                  schema={form.values}\n                  id='image'\n                  type='text'\n                  label='Image'\n                  placeholder='Image'\n                />\n                <Form.File\n                  id='file'\n                  label='Choose an image'\n                  custom\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => uploadFileHandler(e, form)}\n                />\n                {fileUploading && <div>Uploading an image...</div>}\n                <FormControl\n                  schema={form.values}\n                  id='description'\n                  type='text'\n                  label='Description'\n                  placeholder='Description'\n                />\n                <FormControl\n                  schema={form.values}\n                  id='brand'\n                  type='text'\n                  label='Brand'\n                  placeholder='Brand'\n                />\n                <FormControl\n                  schema={form.values}\n                  id='category'\n                  type='text'\n                  label='Category'\n                  placeholder='Category'\n                />\n                <FormControl\n                  schema={form.values}\n                  id='price'\n                  type='number'\n                  label='Price'\n                  placeholder='Price'\n                />\n                <FormControl\n                  schema={form.values}\n                  id='countInStock'\n                  type='number'\n                  label='Count In Stock'\n                  placeholder='Count In Stock'\n                />\n                <Button type='submit' variant='primary' disabled={!isFormSubmittable(form)}>\n                  {getSubmitTitle(form)}\n                </Button>\n              </Form>\n            </>\n          )}\n        </Formik>\n      </JustifyCenter>\n    </>\n  );\n};\n","import React from 'react';\nimport { Product } from '../components/product/admin/Product';\n\nexport const AdminProductCreateScreen = (): JSX.Element => {\n  return <Product />;\n};\n","import React from 'react';\nimport { Product } from '../components/product/admin/Product';\n\nexport const AdminProductScreen = (): JSX.Element => {\n  return <Product />;\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect } from 'react';\nimport { Button, Col, Row, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { RouterEndpoint } from '../../../../router/RouterEndpoint';\nimport { State } from '../../../../store/Store';\nimport { StoreError } from '../../../../store/StoreError';\nimport { StoreLoader } from '../../../../store/StoreLoader';\nimport { useUserAdminAuthenticator } from '../../../auth/useUserAdminAuthenticator';\nimport { ProductActions } from '../../ProductActions';\n\nexport const Products = (): JSX.Element => {\n  useUserAdminAuthenticator();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const productState = useSelector((state: State) => state.product);\n  const { loading, data, error } = productState;\n  const products = (data.products && data.products.data) ?? null;\n\n  useEffect(() => {\n    dispatch(ProductActions.findAll());\n  }, [dispatch]);\n\n  const createProductHandler = () => {\n    dispatch(ProductActions.resetProduct());\n    history.push(RouterEndpoint.adminCreateProduct());\n  };\n\n  const editProductHandler = (id: string) => {\n    history.push(RouterEndpoint.adminProducts(id));\n  };\n\n  const deleteProductHandler = (id: string) => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(ProductActions.deleteById(id));\n    }\n  };\n\n  return (\n    <>\n      {loading && <StoreLoader />}\n      {error && <StoreError error={error} />}\n      <Row className='align-items-center'>\n        <Col>\n          <h4>All Products</h4>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3 btn-sm' onClick={createProductHandler} title='Create Product'>\n            <FontAwesomeIcon icon={['fas', 'plus']} />\n            Create Product\n          </Button>\n        </Col>\n      </Row>\n      <Row>\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>NAME</th>\n              <th>PRICE</th>\n              <th>CATEGORY</th>\n              <th>BRAND</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {products &&\n              products.map((product) => (\n                <tr key={product.id}>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <Button\n                      variant='light'\n                      className='btn-sm'\n                      title='Edit Product'\n                      onClick={() => editProductHandler(product.id)}\n                    >\n                      <FontAwesomeIcon icon={['fas', 'edit']} />\n                    </Button>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      title='Delete Product'\n                      onClick={() => deleteProductHandler(product.id)}\n                    >\n                      <FontAwesomeIcon icon={['fas', 'trash']} />\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { Products } from '../components/product/products/admin/Products';\n\nexport const AdminProductsScreen = (): JSX.Element => {\n  return <Products />;\n};\n","import { AxiosRequestConfig } from 'axios';\nimport { AppApi } from '../../app/AppApi';\nimport { PageableResult } from '../../type/PageableResult';\nimport { Result } from '../../type/Result';\nimport { User } from './type/User';\n\nexport type UserApiPageResponse = PageableResult<User, Error>;\nexport type UserApiResponse = Result<User, Error>;\nconst baseUrl = '/users';\n\nconst findAll = async (token: string | null): Promise<UserApiPageResponse> => {\n  try {\n    const endpoint = `${baseUrl}`;\n    const config: AxiosRequestConfig = {\n      headers: {\n        ...AppApi.getAuthorizationHeader(token),\n      },\n    };\n\n    const response = await AppApi.baseApi.get<UserApiPageResponse>(endpoint, config);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nconst findById = async (token: string | null, id: string): Promise<UserApiResponse> => {\n  try {\n    const endpoint = `${baseUrl}/${id}`;\n    const config: AxiosRequestConfig = {\n      headers: {\n        ...AppApi.getAuthorizationHeader(token),\n      },\n    };\n\n    const response = await AppApi.baseApi.get<UserApiResponse>(endpoint, config);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\n// not used, example\nconst save = async (token: string | null, entity: User): Promise<UserApiResponse> => {\n  try {\n    const endpoint = `${baseUrl}`;\n    const config: AxiosRequestConfig = {\n      headers: {\n        ...AppApi.getAuthorizationHeader(token),\n      },\n    };\n\n    const response = await AppApi.baseApi.post<UserApiResponse>(endpoint, entity, config);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nconst updateById = async (\n  token: string | null,\n  id: string,\n  query: Partial<User>,\n): Promise<UserApiResponse> => {\n  try {\n    const endpoint = `${baseUrl}/${id}`;\n    const config: AxiosRequestConfig = {\n      headers: {\n        ...AppApi.getAuthorizationHeader(token),\n      },\n    };\n\n    const response = await AppApi.baseApi.patch<UserApiResponse>(endpoint, query, config);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nconst deleteById = async (token: string | null, id: string): Promise<void> => {\n  try {\n    const endpoint = `${baseUrl}/${id}`;\n    const config: AxiosRequestConfig = {\n      headers: {\n        ...AppApi.getAuthorizationHeader(token),\n      },\n    };\n\n    await AppApi.baseApi.delete<UserApiResponse>(endpoint, config);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const UserApi = {\n  findAll,\n  findById,\n  save,\n  updateById,\n  deleteById,\n};\n","import { ReducerAction } from '../../store/reducer/ReducerAction';\nimport { ReducerActionCreator } from '../../store/reducer/ReducerActionCreator';\nimport { User } from './type/User';\nimport { UserApiPageResponse } from './UserApi';\n\ntype Action = ReducerAction<ActionType, Payload>;\nconst action = ReducerActionCreator<ActionType, Payload | Error>();\n\ntype Users = Pick<UserApiPageResponse, 'data' | 'paginator'>;\ntype UserId = Pick<User, 'id'>;\ntype Payload = User | Users | UserId;\n\ntype ActionType =\n  | 'USER_REQUEST'\n  | 'USER_FIND_ALL'\n  | 'USER_FIND_BY_ID'\n  | 'USER_UPDATE_BY_ID'\n  | 'USER_DELETE_BY_ID'\n  | 'USER_RESET'\n  | 'USER_ERROR';\n\nexport type UserState = {\n  loading: boolean;\n  data: {\n    user: User | null;\n    users: Users | null;\n  };\n  error: Error | null;\n};\n\nconst initialState: UserState = {\n  loading: false,\n  data: {\n    user: null,\n    users: null,\n  },\n  error: null,\n};\n\nconst reducer = (state = initialState, action: Action): UserState => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'USER_REQUEST':\n      return { ...state, loading: true, error: null };\n    case 'USER_FIND_ALL':\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        data: {\n          ...state.data,\n          users: payload as Users,\n        },\n      };\n    case 'USER_FIND_BY_ID':\n    case 'USER_UPDATE_BY_ID':\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        data: {\n          ...state.data,\n          user: payload as User,\n        },\n      };\n    case 'USER_DELETE_BY_ID':\n      return deleteById(state, payload as UserId);\n    case 'USER_RESET':\n      return initialState;\n    case 'USER_ERROR':\n      return { ...state, loading: false, error: payload as Error };\n    default:\n      return state;\n  }\n};\n\nconst deleteById = (state: UserState, payload: UserId): UserState => {\n  if (!state.data.users) {\n    return state;\n  }\n\n  const usersDataUpdated = state.data.users.data.filter((user) => user.id !== payload.id);\n\n  return {\n    ...state,\n    loading: false,\n    error: null,\n    data: {\n      ...state.data,\n      users: {\n        ...state.data.users,\n        data: usersDataUpdated,\n      },\n    },\n  };\n};\n\nexport const UserStore = {\n  action,\n  reducer,\n};\n","import { Dispatch } from 'redux';\nimport { State } from '../../store/Store';\nimport { AuthUtils } from '../auth/AuthUtils';\nimport { User } from './type/User';\nimport { UserApi } from './UserApi';\nimport { UserStore } from './UserStore';\n\nconst findAll = () => async (dispatch: Dispatch, getState: () => State): Promise<void> => {\n  try {\n    dispatch(UserStore.action('USER_REQUEST'));\n\n    const token = AuthUtils.getToken(getState().auth);\n\n    const response = await UserApi.findAll(token);\n    if (response.error) {\n      dispatch(UserStore.action('USER_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data || !response.paginator) {\n      return;\n    }\n\n    const { data, paginator } = response;\n\n    dispatch(UserStore.action('USER_FIND_ALL', { data, paginator }));\n  } catch (error) {\n    dispatch(UserStore.action('USER_ERROR', error));\n  }\n};\n\nconst findById = (id: string) => async (\n  dispatch: Dispatch,\n  getState: () => State,\n): Promise<void> => {\n  try {\n    dispatch(UserStore.action('USER_REQUEST'));\n\n    const token = AuthUtils.getToken(getState().auth);\n\n    const response = await UserApi.findById(token, id);\n    if (response.error) {\n      dispatch(UserStore.action('USER_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data) {\n      return;\n    }\n\n    dispatch(UserStore.action('USER_FIND_BY_ID', response.data));\n  } catch (error) {\n    dispatch(UserStore.action('USER_ERROR', error));\n  }\n};\n\nconst updateById = (id: string, query: Partial<User>) => async (\n  dispatch: Dispatch,\n  getState: () => State,\n): Promise<void> => {\n  try {\n    dispatch(UserStore.action('USER_REQUEST'));\n\n    const token = AuthUtils.getToken(getState().auth);\n\n    const response = await UserApi.updateById(token, id, query);\n    if (response.error) {\n      dispatch(UserStore.action('USER_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data) {\n      return;\n    }\n\n    dispatch(UserStore.action('USER_UPDATE_BY_ID', response.data));\n  } catch (error) {\n    dispatch(UserStore.action('USER_ERROR', error));\n  }\n};\n\nconst deleteById = (id: string) => async (\n  dispatch: Dispatch,\n  getState: () => State,\n): Promise<void> => {\n  try {\n    dispatch(UserStore.action('USER_REQUEST'));\n\n    const token = AuthUtils.getToken(getState().auth);\n\n    await UserApi.deleteById(token, id);\n\n    dispatch(UserStore.action('USER_DELETE_BY_ID', { id }));\n  } catch (error) {\n    dispatch(UserStore.action('USER_ERROR', error));\n  }\n};\n\nconst reset = () => async (dispatch: Dispatch): Promise<void> => {\n  try {\n    dispatch(UserStore.action('USER_RESET'));\n  } catch (error) {\n    dispatch(UserStore.action('USER_ERROR', error));\n  }\n};\n\nexport const UserActions = {\n  findAll,\n  findById,\n  updateById,\n  deleteById,\n  reset,\n};\n","import { Expose } from 'class-transformer';\nimport { IsNotEmpty, IsString } from 'class-validator';\nimport { User } from './type/User';\n\nexport class UserForm implements Partial<User> {\n  @Expose()\n  @IsString()\n  @IsNotEmpty()\n  name = '';\n}\n","import { Formik, FormikErrors, FormikHelpers, FormikProps } from 'formik';\nimport React, { useEffect, useMemo } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { ClassTransformer } from '../../class/ClassTransformer';\nimport { State } from '../../store/Store';\nimport { StoreError } from '../../store/StoreError';\nimport { StoreLoader } from '../../store/StoreLoader';\nimport { useUserAuthenticator } from '../auth/useUserAuthenticator';\nimport { JustifyCenter } from '../content/JustifyCenter';\nimport { FormControl } from '../form/FormControl';\nimport { FormUtils } from '../form/FormUtils';\nimport { UserActions } from './UserActions';\nimport { UserForm } from './UserForm';\n\ntype Params = {\n  id: string;\n};\n\nexport const User = (): JSX.Element => {\n  useUserAuthenticator();\n\n  const dispatch = useDispatch();\n  const { id } = useParams<Params>();\n\n  const userState = useSelector((state: State) => state.user);\n  const { loading, data, error } = userState;\n  const user = data.user;\n\n  useEffect(() => {\n    dispatch(UserActions.findById(id));\n  }, [dispatch, id]);\n\n  const initialFormState = useMemo(() => ClassTransformer.fromPlain(UserForm, user), [user]);\n\n  const validateFormHandler = async (values: UserForm): Promise<FormikErrors<UserForm>> => {\n    try {\n      const result = await FormUtils.validate(values, UserForm);\n      return Promise.resolve(result);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  const isFormSubmittable = (form: FormikProps<UserForm>) => {\n    return FormUtils.isSubmittable(form);\n  };\n\n  const submitFormHandler = async (\n    values: UserForm,\n    FormActions: FormikHelpers<UserForm>,\n  ): Promise<void> => {\n    const formState = FormUtils.getState(values, UserForm);\n\n    dispatch(UserActions.updateById(id, formState));\n\n    FormActions.setSubmitting(false);\n  };\n\n  return (\n    <>\n      {loading && <StoreLoader />}\n      {error && <StoreError error={error} />}\n      <JustifyCenter>\n        <h1>Edit User</h1>\n        <Formik\n          enableReinitialize={true}\n          initialValues={initialFormState ?? new UserForm()}\n          validate={validateFormHandler}\n          onSubmit={submitFormHandler}\n        >\n          {(form) => (\n            <>\n              <Form\n                onSubmit={(e: React.FormEvent<HTMLFormElement>) => form.handleSubmit(e)}\n                noValidate\n              >\n                <FormControl\n                  schema={form.values}\n                  id='name'\n                  type='text'\n                  label='User Name'\n                  placeholder='User name'\n                />\n                <Button type='submit' variant='primary' disabled={!isFormSubmittable(form)}>\n                  {form.isSubmitting ? 'Updating...' : 'Update'}\n                </Button>\n              </Form>\n            </>\n          )}\n        </Formik>\n      </JustifyCenter>\n    </>\n  );\n};\n","import React from 'react';\nimport { User } from '../components/user/User';\n\nexport const AdminUserScreen = (): JSX.Element => {\n  return <User />;\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect } from 'react';\nimport { Button, Row, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { RouterEndpoint } from '../../../router/RouterEndpoint';\nimport { State } from '../../../store/Store';\nimport { StoreError } from '../../../store/StoreError';\nimport { StoreLoader } from '../../../store/StoreLoader';\nimport { useUserAuthenticator } from '../../auth/useUserAuthenticator';\nimport { UserActions } from '../UserActions';\n\nexport const Users = (): JSX.Element => {\n  useUserAuthenticator();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const userState = useSelector((state: State) => state.user);\n  const { loading, data, error } = userState;\n  const users = (data.users && data.users.data) ?? null;\n\n  useEffect(() => {\n    dispatch(UserActions.findAll());\n  }, [dispatch]);\n\n  const editUserHandler = (id: string) => {\n    history.push(RouterEndpoint.adminUsers(id));\n  };\n\n  const deleteUserHandler = (id: string) => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(UserActions.deleteById(id));\n    }\n  };\n\n  return (\n    <>\n      {loading && <StoreLoader />}\n      {error && <StoreError error={error} />}\n      <h4>All Users</h4>\n      <Row>\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users &&\n              users.map((user) => (\n                <tr key={user.id}>\n                  <td>{user.name}</td>\n                  <td>{user.email}</td>\n                  <td>\n                    {user.isAdmin ? (\n                      <FontAwesomeIcon icon={['fas', 'check']} color='green' />\n                    ) : (\n                      <FontAwesomeIcon icon={['fas', 'times']} color='red' />\n                    )}\n                  </td>\n                  <td>\n                    <Button\n                      variant='light'\n                      className='btn-sm'\n                      onClick={() => editUserHandler(user.id)}\n                    >\n                      <FontAwesomeIcon icon={['fas', 'edit']} />\n                    </Button>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteUserHandler(user.id)}\n                    >\n                      <FontAwesomeIcon icon={['fas', 'trash']} />\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { Users } from '../components/user/users/Users';\n\nexport const AdminUsersScreen = (): JSX.Element => {\n  return <Users />;\n};\n","import { OrderItem } from './orderItem/type/OrderItem';\n\nconst getOrderItemsCount = (orderItems: OrderItem[] | null): number => {\n  return orderItems ? orderItems.reduce((accumulator, item) => accumulator + item.quantity, 0) : 0;\n};\n\nexport const CartUtils = {\n  getOrderItemsCount,\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useCallback, useMemo } from 'react';\nimport { Alert, Button, Card, Col, Form, Image, ListGroup, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { RouterEndpoint } from '../../router/RouterEndpoint';\nimport { State } from '../../store/Store';\nimport { NumberUtils } from '../../utils/NumberUtils';\nimport { CartActions } from './CartActions';\nimport { CartUtils } from './CartUtils';\n\nexport const Cart = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const cartState = useSelector((state: State) => state.cart);\n  const { orderItems } = cartState.data;\n\n  const orderItemsCount = useMemo(() => {\n    return CartUtils.getOrderItemsCount(orderItems);\n  }, [orderItems]);\n\n  const orderItemsTotal = useMemo(() => {\n    return orderItems\n      ? NumberUtils.toFixed(\n          orderItems.reduce((accumulator, item) => accumulator + item.quantity * item.price, 0),\n        )\n      : 0.0;\n  }, [orderItems]);\n\n  const changeOrderItemQuantityHandler = useCallback(\n    (e: React.ChangeEvent<HTMLSelectElement>, id: string) => {\n      dispatch(CartActions.addOrderItem(id, Number(e.target.value)));\n    },\n    [dispatch],\n  );\n\n  const removeOrderItemHandler = useCallback(\n    (id: string) => {\n      dispatch(CartActions.removeOrderItem(id));\n    },\n    [dispatch],\n  );\n\n  const checkoutHandler = () => {\n    history.push(`${RouterEndpoint.signIn('shipping')}`);\n  };\n\n  const renderEmptyCart = () => {\n    return (\n      <Alert variant='info'>\n        Your cart is empty <Link to={RouterEndpoint.home()}>Go Back</Link>\n      </Alert>\n    );\n  };\n\n  const renderOrderItemStockValues = useCallback((countInStock: number) => {\n    const keys = [...Array(countInStock).keys()];\n    return keys.map((key) => {\n      const optionValue = key + 1;\n      return (\n        <option key={optionValue} value={optionValue}>\n          {optionValue}\n        </option>\n      );\n    });\n  }, []);\n\n  const renderCartItems = () => {\n    return (\n      <ListGroup variant='flush'>\n        {orderItems &&\n          orderItems.map((orderItem) => (\n            <ListGroup.Item key={orderItem.product}>\n              <Row>\n                <Col md={2}>\n                  <Image src={orderItem.image} alt={orderItem.name} fluid rounded />\n                </Col>\n                <Col md={3}>{orderItem.name}</Col>\n                <Col md={2}>${orderItem.price}</Col>\n                <Col md={2}>\n                  <Form.Control\n                    as='select'\n                    value={orderItem.quantity}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                      changeOrderItemQuantityHandler(e, orderItem.product)\n                    }\n                  >\n                    {renderOrderItemStockValues(orderItem.countInStock)}\n                  </Form.Control>\n                </Col>\n                <Col md={3}>\n                  <Button\n                    type='button'\n                    variant='light'\n                    onClick={() => removeOrderItemHandler(orderItem.product)}\n                  >\n                    <FontAwesomeIcon icon={['fas', 'trash']} />\n                  </Button>\n                </Col>\n              </Row>\n            </ListGroup.Item>\n          ))}\n      </ListGroup>\n    );\n  };\n\n  const isCheckoutable = (): boolean => {\n    return orderItems && orderItems.length > 0 ? true : false;\n  };\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {!isCheckoutable() ? renderEmptyCart() : renderCartItems()}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h4>Subtotal ({orderItemsCount}) items</h4>${orderItemsTotal}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={!isCheckoutable()}\n                onClick={checkoutHandler}\n              >\n                Proceed To Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n","import React from 'react';\nimport { Cart } from '../components/cart/Cart';\n\nexport const CartScreen = (): JSX.Element => {\n  return <Cart />;\n};\n","import { useLocation } from 'react-router-dom';\n\nexport const useQueryParams = (): URLSearchParams => {\n  return new URLSearchParams(useLocation().search);\n};\n","import React from 'react';\nimport { Pagination } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\ntype Props = {\n  endpoint: string;\n  pageLimit: number;\n  totalPages: number;\n  currentPage: number;\n};\n\nexport const Paginator = (props: Props): JSX.Element => {\n  const { endpoint, pageLimit, totalPages, currentPage } = props;\n\n  return (\n    <Pagination>\n      {[...Array(totalPages).keys()].map((page) => (\n        <LinkContainer key={page + 1} to={`${endpoint}?pageLimit=${pageLimit}&page=${page + 1}`}>\n          <Pagination.Item active={page + 1 === currentPage}>{page + 1}</Pagination.Item>\n        </LinkContainer>\n      ))}\n    </Pagination>\n  );\n};\n","import React from 'react';\nimport { Carousel, Image } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { RouterEndpoint } from '../../../../router/RouterEndpoint';\nimport { ProductUtils } from '../../ProductUtils';\nimport { Product } from '../../type/Product';\n\ntype Props = {\n  productsTopRated: Product[] | null;\n};\n\nexport const ProductsCarousel = (props: Props): JSX.Element => {\n  const { productsTopRated } = props;\n\n  return (\n    <>\n      <Carousel pause='hover' className='bg-dark'>\n        {productsTopRated &&\n          productsTopRated.map((product) => (\n            <Carousel.Item key={product.id}>\n              <Link to={RouterEndpoint.products(product.id)}>\n                <Image\n                  src={ProductUtils.getProductImageUrl(product.image)}\n                  alt={product.name}\n                  fluid\n                />\n                <Carousel.Caption className='carousel-caption'>\n                  <h2>\n                    {product.name} (${product.price})\n                  </h2>\n                </Carousel.Caption>\n              </Link>\n            </Carousel.Item>\n          ))}\n      </Carousel>\n    </>\n  );\n};\n","import { FontAwesomeIcon, FontAwesomeIconProps } from '@fortawesome/react-fontawesome';\nimport React, { useCallback } from 'react';\nimport { Product } from '../type/Product';\n\ntype Props = {\n  product: Product;\n  color?: string;\n};\n\nexport const ProductRating = (props: Props): JSX.Element => {\n  const { product, color = '#f8e825' } = props;\n  const { rating, numReviews } = product;\n  const text = `${numReviews} reviews`;\n\n  const getIcon = useCallback(\n    (rate: number): FontAwesomeIconProps['icon'] => {\n      return rating >= rate\n        ? ['fas', 'star']\n        : rating >= rate - 0.5\n        ? ['fas', 'star-half-alt']\n        : ['far', 'star'];\n    },\n    [rating],\n  );\n\n  return (\n    <div className='rating'>\n      {[1, 2, 3, 4, 5].map((rate) => {\n        return <FontAwesomeIcon key={rate} icon={getIcon(rate)} color={color} />;\n      })}\n\n      <span>{text && text}</span>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { RouterEndpoint } from '../../../router/RouterEndpoint';\nimport { ProductUtils } from '../ProductUtils';\nimport { ProductRating } from '../rating/ProductRating';\nimport { Product } from '../type/Product';\n\ntype Props = {\n  product: Product;\n};\n\nexport const ProductsItem = (props: Props): JSX.Element => {\n  const { product } = props;\n\n  return (\n    <Card className='my-3 p-3 rounded'>\n      <Link to={RouterEndpoint.products(product.id)}>\n        <Card.Img src={ProductUtils.getProductImageUrl(product.image)} variant='top' />\n      </Link>\n\n      <Card.Body>\n        <Link to={RouterEndpoint.products(product.id)}>\n          <Card.Title as='div'>\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n        <Card.Text as='div'>\n          <ProductRating product={product} />\n        </Card.Text>\n        <Card.Text as='h3'>${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport Skeleton from 'react-loading-skeleton';\n\nexport const ProductsItemSkeleton = (): JSX.Element => {\n  return (\n    <Card className='my-3 p-3 rounded'>\n      <Card.Img\n        src='/assets/images/placeholders/default-placeholder-image.png'\n        variant='top'\n        style={{ height: 220 }}\n      />\n\n      <Card.Body>\n        <Card.Title as='div'>\n          <strong>\n            <Skeleton />\n          </strong>\n        </Card.Title>\n        <Card.Text as='div'>\n          <Skeleton />\n        </Card.Text>\n        <Card.Text as='h3'>\n          <Skeleton />\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n","import React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport Skeleton from 'react-loading-skeleton';\nimport { ProductsItemSkeleton } from './ProductsItemSkeleton';\n\nexport const ProductsSkeleton = (): JSX.Element => {\n  const products = Array.of(1, 2, 3, 4, 5, 6);\n\n  return (\n    <>\n      <h1>\n        <Skeleton width={400} />\n      </h1>\n      <Row>\n        {products &&\n          products.map((_, index) => {\n            return (\n              <Col key={index} sm={12} md={6} lg={4} xl={3}>\n                <ProductsItemSkeleton />\n              </Col>\n            );\n          })}\n      </Row>\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useQueryParams } from '../../../http/useQueryParams';\nimport { RouterEndpoint } from '../../../router/RouterEndpoint';\nimport { State } from '../../../store/Store';\nimport { StoreError } from '../../../store/StoreError';\nimport { Paginator } from '../../paginator/Paginator';\nimport { ProductActions } from '../ProductActions';\nimport { ProductsCarousel } from './carousel/ProductsCarousel';\nimport { ProductsItem } from './ProductsItem';\nimport { ProductsSkeleton } from './skeletons/ProductsSkeleton';\n\ntype Params = {\n  keyword?: string;\n};\n\nexport const Products = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const { keyword } = useParams<Params>();\n  const queryParams = useQueryParams();\n  const { t } = useTranslation('Products');\n\n  const page = queryParams.get('page') ?? undefined;\n  const pageLimit = queryParams.get('pageLimit') ?? undefined;\n\n  const productState = useSelector((state: State) => state.product);\n  const { loading, data, error } = productState;\n  const products = data.products ? data.products.data : null;\n  const paginator = data.products ? data.products.paginator : null;\n  const { totalPages = 1, currentPage = 1 } = paginator ?? {};\n  const productsTopRated = data.productsTopRated ? data.productsTopRated.data : null;\n\n  useEffect(() => {\n    dispatch(ProductActions.findAll(keyword, page, pageLimit));\n    dispatch(ProductActions.findTopRated());\n  }, [dispatch, keyword, page, pageLimit]);\n\n  if (loading) {\n    return <ProductsSkeleton />;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Welcome to ProShop | Home</title>\n        <meta name='description' content='ProShop' />\n      </Helmet>\n      {error && <StoreError error={error} />}\n      <h4>{t('common:products.header', { namespace: 'common' })}</h4>\n      <h4>{t('Products:products.header', { namespace: 'Products' })}</h4>\n      {!keyword && <ProductsCarousel productsTopRated={productsTopRated} />}\n      <Row>\n        {products &&\n          products.map((product) => {\n            return (\n              <Col key={product.id} sm={12} md={6} lg={4} xl={3}>\n                <ProductsItem product={product} />\n              </Col>\n            );\n          })}\n      </Row>\n      <Paginator\n        endpoint={RouterEndpoint.products()}\n        pageLimit={Number(pageLimit)}\n        totalPages={totalPages}\n        currentPage={currentPage}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { Products } from '../components/product/products/Products';\n\nexport const ProductsScreen = (): JSX.Element => {\n  return <Products />;\n};\n","import React from 'react';\nimport { ProductsScreen } from './ProductsScreen';\n\nexport const HomeScreen = (): JSX.Element => {\n  return <ProductsScreen />;\n};\n","import React from 'react';\n\nexport const NotFoundScreen = (): JSX.Element => {\n  return <div>404 Not Found</div>;\n};\n","import React from 'react';\nimport { Order } from '../components/order/Order';\n\nexport const OrderScreen = (): JSX.Element => {\n  return <Order queryByUserId={true} />;\n};\n","import React from 'react';\nimport { Orders } from '../components/order/orders/Orders';\n\nexport const OrdersScreen = (): JSX.Element => {\n  return <Orders queryByUserId={true} />;\n};\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\ntype Props = {\n  step?: boolean;\n  linkUrl: string;\n  linkName: string;\n};\n\nexport const CheckoutStepsItem = (props: Props): JSX.Element => {\n  const { step, linkUrl, linkName } = props;\n\n  if (!step) {\n    return (\n      <Nav.Item>\n        <Nav.Link disabled>{linkName}</Nav.Link>\n      </Nav.Item>\n    );\n  }\n\n  return (\n    <Nav.Item>\n      <LinkContainer to={linkUrl}>\n        <Nav.Link>{linkName}</Nav.Link>\n      </LinkContainer>\n    </Nav.Item>\n  );\n};\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { RouterEndpoint } from '../../../router/RouterEndpoint';\nimport { CheckoutStepsItem } from './CheckoutStepsItem';\n\ntype Props = {\n  step1?: boolean;\n  step2?: boolean;\n  step3?: boolean;\n  step4?: boolean;\n};\n\nexport const CheckoutSteps = (props: Props): JSX.Element => {\n  const { step1, step2, step3, step4 } = props;\n\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <CheckoutStepsItem\n        step={step1}\n        linkUrl={RouterEndpoint.signIn(RouterEndpoint.shipping())}\n        linkName='Sign In'\n      />\n      <CheckoutStepsItem step={step2} linkUrl={RouterEndpoint.shipping()} linkName='Shipping' />\n      <CheckoutStepsItem step={step3} linkUrl={RouterEndpoint.payment()} linkName='Payment' />\n      <CheckoutStepsItem\n        step={step4}\n        linkUrl={RouterEndpoint.placeOrder()}\n        linkName='Place Order'\n      />\n    </Nav>\n  );\n};\n","import React, { useState } from 'react';\nimport { Button, Col, Form, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { RouterEndpoint } from '../../../router/RouterEndpoint';\nimport { State } from '../../../store/Store';\nimport { JustifyCenter } from '../../content/JustifyCenter';\nimport { CartActions } from '../CartActions';\nimport { CheckoutSteps } from '../checkoutSteps/CheckoutSteps';\nimport { PaymentMethod as PaymentMethodType } from './type/PaymentMethod';\n\nexport const PaymentMethod = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const cartState = useSelector((state: State) => state.cart);\n  const { shippingAddress, paymentMethod: paymentMethodSaved } = cartState.data;\n\n  if (!shippingAddress) {\n    history.push(RouterEndpoint.shipping());\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState<PaymentMethodType>(\n    paymentMethodSaved ? paymentMethodSaved : PaymentMethodType.PAYPAL,\n  );\n\n  const submitHandler = (e: React.FormEvent<HTMLElement>) => {\n    e.preventDefault();\n\n    dispatch(CartActions.savePaymentMethod(paymentMethod));\n\n    history.push(RouterEndpoint.placeOrder());\n  };\n\n  return (\n    <JustifyCenter>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <fieldset>\n          <Form.Group as={Row}>\n            <Form.Label as='legend'>Select Method</Form.Label>\n            <Col>\n              <Form.Check\n                type='radio'\n                name='paymentMethod'\n                id='PayPal'\n                label='PayPal'\n                checked={paymentMethod === PaymentMethodType.PAYPAL}\n                value={PaymentMethodType.PAYPAL}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  setPaymentMethod(e.target.value as PaymentMethodType)\n                }\n              />\n              <Form.Check\n                type='radio'\n                name='paymentMethod'\n                id='Stripe'\n                label='Stripe'\n                checked={paymentMethod === PaymentMethodType.STRIPE}\n                value={PaymentMethodType.STRIPE}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  setPaymentMethod(e.target.value as PaymentMethodType)\n                }\n              />\n            </Col>\n          </Form.Group>\n        </fieldset>\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </JustifyCenter>\n  );\n};\n","import React from 'react';\nimport { PaymentMethod } from '../components/cart/paymentMethod/PaymentMethod';\n\nexport const PaymentScreen = (): JSX.Element => {\n  return <PaymentMethod />;\n};\n","import React, { useEffect } from 'react';\nimport { Alert, Button, Card, Col, Image, ListGroup, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { RouterEndpoint } from '../../router/RouterEndpoint';\nimport { State } from '../../store/Store';\nimport { StoreError } from '../../store/StoreError';\nimport { StoreLoader } from '../../store/StoreLoader';\nimport { NumberUtils } from '../../utils/NumberUtils';\nimport { CheckoutSteps } from '../cart/checkoutSteps/CheckoutSteps';\nimport { OrderActions } from './OrderActions';\nimport { Order as OrderType } from './type/Order';\n\nexport const PlaceOrder = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const cartState = useSelector((state: State) => state.cart);\n  const { orderItems, shippingAddress, paymentMethod } = cartState.data;\n\n  if (!shippingAddress) {\n    history.push(RouterEndpoint.shipping());\n  }\n\n  if (!paymentMethod) {\n    history.push(RouterEndpoint.payment());\n  }\n\n  const orderItemsPrice = NumberUtils.round(\n    orderItems\n      ? orderItems.reduce((accumulator, item) => accumulator + item.price * item.quantity, 0)\n      : 0,\n  );\n\n  const shippingPrice = NumberUtils.round(orderItemsPrice > 100 ? 0 : 14.99);\n\n  const taxPrice = NumberUtils.round(0.15 * orderItemsPrice);\n\n  const totalPrice = NumberUtils.round(orderItemsPrice + shippingPrice + taxPrice);\n\n  const orderState = useSelector((state: State) => state.order);\n  const { loading, data, error } = orderState;\n  const order = data.order;\n\n  const placeOrderHandler = () => {\n    if (!orderItems) {\n      return;\n    }\n\n    const order: OrderType = {\n      id: '',\n      orderItems,\n      shippingAddress,\n      paymentMethod,\n      orderItemsPrice,\n      shippingPrice,\n      taxPrice,\n      totalPrice,\n    };\n\n    dispatch(OrderActions.save(order));\n  };\n\n  const placeOrderValidHandler = (): boolean => {\n    return !loading && !error && orderItemsPrice > 0;\n  };\n\n  useEffect(() => {\n    if (loading || error || !order) {\n      return;\n    }\n\n    history.push(RouterEndpoint.userOrders(order.id));\n  }, [loading, error, order, history]);\n\n  return (\n    <>\n      {loading && <StoreLoader />}\n      {error && <StoreError error={error} />}\n      <CheckoutSteps step1 step2 step3 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            {shippingAddress && (\n              <ListGroup.Item>\n                <h2>Shipping</h2>\n                <p>\n                  {shippingAddress.address}, {shippingAddress.city} {shippingAddress.postalCode},{' '}\n                  {shippingAddress.country}\n                </p>\n              </ListGroup.Item>\n            )}\n\n            {paymentMethod && (\n              <ListGroup.Item>\n                <h2>Payment</h2>\n                <p>{paymentMethod}</p>\n              </ListGroup.Item>\n            )}\n\n            <ListGroup.Item>\n              <h2>Order</h2>\n              {!orderItems || orderItems.length === 0 ? (\n                <Alert variant='info'>\n                  Your cart is empty <Link to={RouterEndpoint.home()}>Go Back</Link>\n                </Alert>\n              ) : (\n                <ListGroup variant='flush'>\n                  {orderItems &&\n                    orderItems.map((item, index) => (\n                      <ListGroup.Item key={index}>\n                        <Row>\n                          <Col md={2}>\n                            <Image src={item.image} alt={item.name} fluid rounded />\n                          </Col>\n                          <Col md={6}>{item.name}</Col>\n                          <Col md={4}>\n                            {item.quantity} x ${item.price} = $\n                            {NumberUtils.toFixed(item.quantity * item.price)}\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                    ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${NumberUtils.toFixed(orderItemsPrice)}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${NumberUtils.toFixed(shippingPrice)}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${NumberUtils.toFixed(taxPrice)}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${NumberUtils.toFixed(totalPrice)}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={!placeOrderValidHandler()}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n","import React from 'react';\nimport { PlaceOrder } from '../components/order/PlaceOrder';\n\nexport const PlaceOrderScreen = (): JSX.Element => {\n  return <PlaceOrder />;\n};\n","import { FontAwesomeIcon, FontAwesomeIconProps } from '@fortawesome/react-fontawesome';\nimport React, { useCallback } from 'react';\n\ntype Props = {\n  rating: number;\n  color?: string;\n};\n\nexport const Rating = (props: Props): JSX.Element => {\n  const { rating, color = '#f8e825' } = props;\n\n  const getIcon = useCallback(\n    (rate: number): FontAwesomeIconProps['icon'] => {\n      return rating >= rate\n        ? ['fas', 'star']\n        : rating >= rate - 0.5\n        ? ['fas', 'star-half-alt']\n        : ['far', 'star'];\n    },\n    [rating],\n  );\n\n  return (\n    <div className='rating'>\n      {[1, 2, 3, 4, 5].map((rate) => {\n        return <FontAwesomeIcon key={rate} icon={getIcon(rate)} color={color} />;\n      })}\n    </div>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Alert, Button, Card, Col, Form, Image, ListGroup, Row } from 'react-bootstrap';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { RouterEndpoint } from '../../router/RouterEndpoint';\nimport { State } from '../../store/Store';\nimport { StoreError } from '../../store/StoreError';\nimport { StoreLoader } from '../../store/StoreLoader';\nimport { CartActions } from '../cart/CartActions';\nimport { Review } from '../review/type/Review';\nimport { ProductActions } from './ProductActions';\nimport { ProductUtils } from './ProductUtils';\nimport { ProductRating } from './rating/ProductRating';\nimport { Rating } from './rating/Rating';\n\ntype Params = {\n  id: string;\n};\n\nexport const Product = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const { id } = useParams<Params>();\n\n  const productState = useSelector((state: State) => state.product);\n  const { loading, data, error: productError } = productState;\n  const product = data.product;\n  const review = data.review;\n\n  const cartState = useSelector((state: State) => state.cart);\n  const { error: cartError } = cartState;\n\n  const authState = useSelector((state: State) => state.auth);\n  const { data: authData } = authState;\n\n  const [quantity, setQuantity] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n\n  useEffect(() => {\n    if (review) {\n      alert('Review submitted!');\n      setRating(0);\n      setComment('');\n    }\n\n    dispatch(ProductActions.findById(id));\n  }, [dispatch, id, review]);\n\n  const changeQuantityHandler = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setQuantity(Number(e.target.value));\n  };\n\n  const addToCartHandler = () => {\n    if (!product) {\n      return;\n    }\n\n    dispatch(CartActions.addOrderItem(product.id, quantity));\n  };\n\n  const countInStockValues = useMemo(() => {\n    if (!product) {\n      return;\n    }\n\n    const keys = [...Array(product.countInStock).keys()];\n    return keys.map((key) => {\n      const optionvalue = key + 1;\n      return (\n        <option key={optionvalue} value={optionvalue}>\n          {optionvalue}\n        </option>\n      );\n    });\n  }, [product]);\n\n  const submitReviewHandler = (e: React.FormEvent<HTMLElement>) => {\n    e.preventDefault();\n\n    const review: Review = {\n      id: '',\n      rating,\n      comment,\n      user: authData?.user.id ?? '',\n      product: id,\n    };\n\n    dispatch(ProductActions.saveReview(review));\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>{product && product.name}</title>\n      </Helmet>\n      {loading && <StoreLoader />}\n      {productError && <StoreError error={productError} />}\n      {cartError && <StoreError error={cartError} />}\n      <Link className='btn btn-light my-3' to={RouterEndpoint.home()}>\n        Go Back\n      </Link>\n      {product && (\n        <>\n          <Row>\n            <Col md={6}>\n              <Image\n                src={ProductUtils.getProductImageUrl(product.image)}\n                alt={product.name}\n                fluid\n              />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <ProductRating product={product} />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>Description: {product.description}</ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>${product.price}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>{product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Quantity:</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={quantity}\n                            onChange={changeQuantityHandler}\n                          >\n                            {countInStockValues}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n                  <ListGroup.Item>\n                    <Button\n                      className='btn-block'\n                      type='button'\n                      disabled={product.countInStock === 0}\n                      onClick={addToCartHandler}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h3>Reviews</h3>\n              {!product.reviews ||\n                (product.reviews.length === 0 && <Alert variant='info'>No Reviews</Alert>)}\n              {product.reviews && (\n                <ListGroup variant='flush'>\n                  {(product._reviews as Review[]).map((review) => (\n                    <ListGroup.Item key={review.id}>\n                      <strong>{review.name}</strong>\n                      <Rating rating={review.rating} />\n                      <p>{review.createdAt && review.createdAt.substring(0, 10)}</p>\n                      <p>{review.comment}</p>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n              <ListGroup variant='flush'>\n                <h3>Write a Customer Review</h3>\n                {(!authData || !authData.user) && (\n                  <Alert variant='info'>\n                    Please{' '}\n                    <Link to={RouterEndpoint.signIn(RouterEndpoint.products(id))}>sign in</Link> to\n                    write a review\n                  </Alert>\n                )}\n                {authData && authData.user && (\n                  <Form onSubmit={submitReviewHandler}>\n                    <Form.Group>\n                      <Form.Label>Rating</Form.Label>\n                      <Form.Control\n                        as='select'\n                        value={rating}\n                        onChange={(e) => setRating(Number(e.target.value))}\n                      >\n                        <option key={0} value={0}>\n                          ...Select\n                        </option>\n                        <option key={1} value={1}>\n                          1 - Poor\n                        </option>\n                        <option key={2} value={2}>\n                          2 - Fair\n                        </option>\n                        <option key={3} value={3}>\n                          3 - Good\n                        </option>\n                        <option key={4} value={4}>\n                          4 - Very Good\n                        </option>\n                        <option key={5} value={5}>\n                          5 - Excelent\n                        </option>\n                      </Form.Control>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Comment</Form.Label>\n                      <Form.Control\n                        as='textarea'\n                        rows={3}\n                        value={comment}\n                        onChange={(e) => setComment(e.target.value)}\n                      />\n                    </Form.Group>\n                    <Button type='submit' variant='primary' disabled={rating === 0}>\n                      Submit\n                    </Button>\n                  </Form>\n                )}\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { Product } from '../components/product/Product';\n\nexport const ProductScreen = (): JSX.Element => {\n  return <Product />;\n};\n","import React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { RouterEndpoint } from '../../../router/RouterEndpoint';\nimport { State } from '../../../store/Store';\nimport { useUserAuthenticator } from '../../auth/useUserAuthenticator';\nimport { JustifyCenter } from '../../content/JustifyCenter';\nimport { CartActions } from '../CartActions';\nimport { CheckoutSteps } from '../checkoutSteps/CheckoutSteps';\nimport { ShippingAddress as ShippingAddressType } from './type/ShippingAddress';\n\nexport const ShippingAddress = (): JSX.Element => {\n  useUserAuthenticator();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const cartState = useSelector((state: State) => state.cart);\n  const { shippingAddress } = cartState.data;\n\n  const [address, setAddress] = useState(shippingAddress ? shippingAddress.address : '');\n  const [city, setCity] = useState(shippingAddress ? shippingAddress.city : '');\n  const [postalCode, setPostalCode] = useState(shippingAddress ? shippingAddress.postalCode : '');\n  const [country, setCountry] = useState(shippingAddress ? shippingAddress.country : '');\n\n  const submitHandler = (e: React.FormEvent<HTMLElement>) => {\n    e.preventDefault();\n\n    const shippingAddress: ShippingAddressType = {\n      address,\n      city,\n      postalCode,\n      country,\n    };\n\n    dispatch(CartActions.saveShippingAddress(shippingAddress));\n\n    history.push(RouterEndpoint.payment());\n  };\n\n  return (\n    <JustifyCenter>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping Address</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter address'\n            required\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='city'>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter city'\n            required\n            value={city}\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter postal code'\n            required\n            value={postalCode}\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='country'>\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter country'\n            required\n            value={country}\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </JustifyCenter>\n  );\n};\n","import React from 'react';\nimport { ShippingAddress } from '../components/cart/shippingAddress/ShippingAddress';\n\nexport const ShippingScreen = (): JSX.Element => {\n  return <ShippingAddress />;\n};\n","import { AppApi } from '../../app/AppApi';\nimport { Result } from '../../type/Result';\nimport { User } from '../user/type/User';\nimport { AuthData } from './type/AuthData';\n\nexport type AuthApiResponse = Result<AuthData, Error>;\nexport type SignOutApiResponse = Result<boolean, Error>;\nconst baseUrl = '/auth';\n\nconst signUp = async (user: User): Promise<AuthApiResponse> => {\n  try {\n    const endpoint = `${baseUrl}/signUp`;\n\n    const response = await AppApi.baseApi.post<AuthApiResponse>(endpoint, user);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nconst signIn = async (user: Pick<User, 'email' | 'password'>): Promise<AuthApiResponse> => {\n  try {\n    const endpoint = `${baseUrl}/signIn`;\n\n    const response = await AppApi.baseApi.post<AuthApiResponse>(endpoint, user);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nconst signOut = async (): Promise<SignOutApiResponse> => {\n  try {\n    const endpoint = `${baseUrl}/signOut`;\n\n    const response = await AppApi.baseApi.get<SignOutApiResponse>(endpoint);\n    return Promise.resolve(response.data);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nexport const AuthApi = {\n  signUp,\n  signIn,\n  signOut,\n};\n","import { BaseLocalStorage } from '../../srorage/BaseLocalStorage';\nimport { User } from '../user/type/User';\nimport { AuthData } from './type/AuthData';\nimport { AuthToken } from './type/AuthToken';\n\nclass AuthDataEntity implements AuthData {\n  user!: User;\n  authToken!: AuthToken;\n}\n\nexport class AuthStorage extends BaseLocalStorage<AuthData> {\n  constructor() {\n    super('AUTH_AUTH_DATA', AuthDataEntity);\n  }\n}\n","import { ReducerAction } from '../../store/reducer/ReducerAction';\nimport { ReducerActionCreator } from '../../store/reducer/ReducerActionCreator';\nimport { AuthStorage } from './AuthStorage';\nimport { AuthData } from './type/AuthData';\n\ntype Action = ReducerAction<ActionType, Payload>;\nconst action = ReducerActionCreator<ActionType, Payload | Error>();\n\ntype Payload = AuthData;\n\ntype ActionType = 'AUTH_REQUEST' | 'SIGNUP' | 'SIGNIN' | 'SIGNOUT' | 'AUTH_ERROR';\n\nexport type AuthState = {\n  loading: boolean;\n  data: AuthData | null;\n  error: Error | null;\n};\n\nconst authStorage = new AuthStorage();\n\nconst initialState: AuthState = {\n  loading: false,\n  data: authStorage.find(),\n  error: null,\n};\n\nconst reducer = (state = initialState, action: Action): AuthState => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'AUTH_REQUEST':\n      return { ...state, loading: true, error: null };\n    case 'SIGNUP':\n    case 'SIGNIN':\n      return { ...state, loading: false, error: null, data: payload as AuthData };\n    case 'SIGNOUT':\n      return { ...state, loading: false, error: null, data: null };\n    case 'AUTH_ERROR':\n      return { ...state, loading: false, error: payload as Error };\n    default:\n      return state;\n  }\n};\n\nexport const AuthStore = {\n  action,\n  reducer,\n};\n","import { Dispatch } from 'redux';\nimport { User } from '../user/type/User';\nimport { AuthApi } from './AuthApi';\nimport { AuthStorage } from './AuthStorage';\nimport { AuthStore } from './AuthStore';\n\nconst authStorage = new AuthStorage();\n\nconst signUp = (user: User) => async (dispatch: Dispatch): Promise<void> => {\n  try {\n    dispatch(AuthStore.action('AUTH_REQUEST'));\n\n    const response = await AuthApi.signUp(user);\n    if (response.error) {\n      dispatch(AuthStore.action('AUTH_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data) {\n      return;\n    }\n\n    dispatch(AuthStore.action('SIGNUP', response.data));\n\n    authStorage.save(response.data);\n  } catch (error) {\n    dispatch(AuthStore.action('AUTH_ERROR', error));\n  }\n};\n\nconst signIn = (user: Pick<User, 'email' | 'password'>) => async (\n  dispatch: Dispatch,\n): Promise<void> => {\n  try {\n    dispatch(AuthStore.action('AUTH_REQUEST'));\n\n    const response = await AuthApi.signIn(user);\n    if (response.error) {\n      dispatch(AuthStore.action('AUTH_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data) {\n      return;\n    }\n\n    dispatch(AuthStore.action('SIGNIN', response.data));\n\n    authStorage.save(response.data);\n  } catch (error) {\n    dispatch(AuthStore.action('AUTH_ERROR', error));\n  }\n};\n\nconst signOut = () => async (dispatch: Dispatch): Promise<void> => {\n  try {\n    dispatch(AuthStore.action('AUTH_REQUEST'));\n\n    const response = await AuthApi.signOut();\n    if (response.error) {\n      dispatch(AuthStore.action('AUTH_ERROR', response.error));\n      return;\n    }\n\n    if (!response.data) {\n      return;\n    }\n\n    dispatch(AuthStore.action('SIGNOUT'));\n\n    authStorage.remove();\n  } catch (error) {\n    dispatch(AuthStore.action('AUTH_ERROR', error));\n  }\n};\n\nexport const AuthActions = {\n  signUp,\n  signIn,\n  signOut,\n};\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useQueryParams } from '../../http/useQueryParams';\nimport { RouterEndpoint } from '../../router/RouterEndpoint';\nimport { AuthData } from './type/AuthData';\n\nexport const useAuthRedirect = (authData: AuthData | null): string | null => {\n  const queryParams = useQueryParams();\n  const history = useHistory();\n\n  const redirect = queryParams.get('redirect');\n\n  useEffect(() => {\n    if (authData) {\n      history.push(redirect ? redirect : RouterEndpoint.home());\n    }\n  }, [authData, history, redirect]);\n\n  return redirect;\n};\n","import React, { useState } from 'react';\nimport { Button, Col, Form, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { RouterEndpoint } from '../../../router/RouterEndpoint';\nimport { State } from '../../../store/Store';\nimport { StoreError } from '../../../store/StoreError';\nimport { StoreLoader } from '../../../store/StoreLoader';\nimport { JustifyCenter } from '../../content/JustifyCenter';\nimport { AuthActions } from '../AuthActions';\nimport { useAuthRedirect } from '../useAuthRedirect';\n\nexport const SignIn = (): JSX.Element => {\n  const dispatch = useDispatch();\n\n  const authState = useSelector((state: State) => state.auth);\n  const { loading, data: authData, error } = authState;\n\n  const redirect = useAuthRedirect(authData);\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const submitHandler = (e: React.FormEvent<HTMLElement>) => {\n    e.preventDefault();\n\n    dispatch(AuthActions.signIn({ email, password }));\n  };\n\n  return (\n    <>\n      {loading && <StoreLoader />}\n      {error && <StoreError error={error} />}\n      <JustifyCenter>\n        <h1>Sign In</h1>\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Enter password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Button type='submit' variant='primary'>\n            Sign In\n          </Button>\n        </Form>\n        <Row className='py-3'>\n          <Col>\n            New Customer?{' '}\n            <Link to={redirect ? `${RouterEndpoint.signUp(redirect)}` : RouterEndpoint.signUp()}>\n              Sign Up\n            </Link>\n          </Col>\n        </Row>\n      </JustifyCenter>\n    </>\n  );\n};\n","import React from 'react';\nimport { SignIn } from '../components/auth/signin/SignIn';\n\nexport const SignInScreen = (): JSX.Element => {\n  return <SignIn />;\n};\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\ntype Props = {\n  errors: string[];\n};\n\nexport const FormError = (props: Props): JSX.Element | null => {\n  const { errors } = props;\n\n  if (errors.length === 0) {\n    return null;\n  }\n\n  return (\n    <Alert variant='danger'>\n      {errors.map((error, index) => (\n        <span key={index} style={styles.container}>\n          {error}\n        </span>\n      ))}\n    </Alert>\n  );\n};\n\ntype Styles = {\n  container: React.CSSProperties;\n};\n\nconst styles: Styles = {\n  container: { display: 'block' },\n};\n","const passwordMinLength = (constraint1: string): string => {\n  return `Must be at least ${constraint1} characters`;\n};\n\nexport const SignUpFormUtils = {\n  passwordMinLength,\n};\n","import { Exclude, Expose } from 'class-transformer';\nimport { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\nimport { User } from '../../user/type/User';\nimport { SignUpFormUtils } from './SignUpFormUtils';\n\nexport class SignUpForm implements User {\n  @Exclude()\n  id = '';\n\n  @Expose()\n  @IsString()\n  @IsNotEmpty()\n  name = '';\n\n  @Expose()\n  @IsString()\n  @IsEmail()\n  @IsNotEmpty()\n  email = '';\n\n  @Expose()\n  @IsString()\n  @IsNotEmpty({ message: 'Should not be empty' })\n  @MinLength(6, { message: SignUpFormUtils.passwordMinLength('$constraint1') })\n  password = '';\n\n  @Expose()\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(6)\n  confirmPassword = '';\n}\n","import { Formik, FormikErrors, FormikHelpers, FormikProps } from 'formik';\nimport React, { useMemo, useState } from 'react';\nimport { Button, Col, Form, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { RouterEndpoint } from '../../../router/RouterEndpoint';\nimport { State } from '../../../store/Store';\nimport { StoreError } from '../../../store/StoreError';\nimport { StoreLoader } from '../../../store/StoreLoader';\nimport { JustifyCenter } from '../../content/JustifyCenter';\nimport { FormControl } from '../../form/FormControl';\nimport { FormError } from '../../form/FormError';\nimport { FormUtils } from '../../form/FormUtils';\nimport { AuthActions } from '../AuthActions';\nimport { useAuthRedirect } from '../useAuthRedirect';\nimport { SignUpForm } from './SignUpForm';\nimport { SignUpFormUtils } from './SignUpFormUtils';\n\nexport const SignUp = (): JSX.Element => {\n  const dispatch = useDispatch();\n\n  const authState = useSelector((state: State) => state.auth);\n  const { loading, data: authData, error } = authState;\n\n  const redirect = useAuthRedirect(authData);\n\n  const [formErrors, setFormErrors] = useState<string[]>([]);\n\n  const initialFormState = useMemo(() => new SignUpForm(), []);\n\n  const validateFormHandler = async (values: SignUpForm): Promise<FormikErrors<SignUpForm>> => {\n    try {\n      const result = await FormUtils.validate(values, SignUpForm);\n      return Promise.resolve(result);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  const isFormSubmittable = (form: FormikProps<SignUpForm>) => {\n    return FormUtils.isSubmittable(form);\n  };\n\n  const submitFormHandler = async (\n    values: SignUpForm,\n    FormActions: FormikHelpers<SignUpForm>,\n  ): Promise<void> => {\n    const formState = FormUtils.getState(values, SignUpForm);\n\n    if (formState.password !== formState.confirmPassword) {\n      setFormErrors(['Passwords do not match']);\n    } else {\n      dispatch(AuthActions.signUp(formState));\n    }\n\n    FormActions.setSubmitting(false);\n  };\n\n  return (\n    <>\n      {loading && <StoreLoader />}\n      {error && <StoreError error={error} />}\n      <JustifyCenter>\n        <h1>Sign Up</h1>\n        <Formik\n          initialValues={initialFormState}\n          validate={validateFormHandler}\n          onSubmit={submitFormHandler}\n        >\n          {(form) => (\n            <>\n              {<FormError errors={formErrors} />}\n              <Form\n                onSubmit={(e: React.FormEvent<HTMLFormElement>) => form.handleSubmit(e)}\n                noValidate\n              >\n                <FormControl\n                  schema={form.values}\n                  id='name'\n                  type='text'\n                  label='User Name'\n                  placeholder='User name'\n                />\n                <FormControl\n                  schema={form.values}\n                  id='email'\n                  type='email'\n                  label='Email Address'\n                  placeholder='Email address'\n                />\n                <FormControl\n                  schema={form.values}\n                  id='password'\n                  type='password'\n                  label='Password'\n                  placeholder='Password'\n                  helpText={SignUpFormUtils.passwordMinLength('6')}\n                  instantFeedback={true}\n                />\n                <FormControl\n                  schema={form.values}\n                  id='confirmPassword'\n                  type='password'\n                  label='Confirm Password'\n                  placeholder='Confirm password'\n                />\n                <Button type='submit' variant='primary' disabled={!isFormSubmittable(form)}>\n                  {form.isSubmitting ? 'Sign Up...' : 'Sign Up'}\n                </Button>\n              </Form>\n            </>\n          )}\n        </Formik>\n        <Row className='py-3'>\n          <Col>\n            Have an Account?{' '}\n            <Link to={redirect ? `${RouterEndpoint.signIn(redirect)}` : RouterEndpoint.signIn()}>\n              Sign In\n            </Link>\n          </Col>\n        </Row>\n      </JustifyCenter>\n    </>\n  );\n};\n","import React from 'react';\nimport { SignUp } from '../components/auth/signup/SignUp';\n\nexport const SignUpScreen = (): JSX.Element => {\n  return <SignUp />;\n};\n","import React from 'react';\n\nexport const UnauthorizedScreen = (): JSX.Element => {\n  return <div>401 Unauthorized</div>;\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { AdminOrderScreen } from '../screens/AdminOrderScreen';\nimport { AdminOrdersScreen } from '../screens/AdminOrdersScreen';\nimport { AdminProductCreateScreen } from '../screens/AdminProductCreateScreen';\nimport { AdminProductScreen } from '../screens/AdminProductScreen';\nimport { AdminProductsScreen } from '../screens/AdminProductsScreen';\nimport { AdminUserScreen } from '../screens/AdminUserScreen';\nimport { AdminUsersScreen } from '../screens/AdminUsersScreen';\nimport { CartScreen } from '../screens/CartScreen';\nimport { HomeScreen } from '../screens/HomeScreen';\nimport { NotFoundScreen } from '../screens/NotFoundScreen';\nimport { OrderScreen } from '../screens/OrderScreen';\nimport { OrdersScreen } from '../screens/OrdersScreen';\nimport { PaymentScreen } from '../screens/PaymentScreen';\nimport { PlaceOrderScreen } from '../screens/PlaceOrderScreen';\nimport { ProductScreen } from '../screens/ProductScreen';\nimport { ProductsScreen } from '../screens/ProductsScreen';\nimport { ShippingScreen } from '../screens/ShippingScreen';\nimport { SignInScreen } from '../screens/SignInScreen';\nimport { SignUpScreen } from '../screens/SignUpScreen';\nimport { UnauthorizedScreen } from '../screens/UnauthorizedScreen';\n\nexport const Routes = (): JSX.Element => {\n  return (\n    <Switch>\n      <Route exact path='/unauthorized' component={UnauthorizedScreen} />\n      <Route exact path='/signup' component={SignUpScreen} />\n      <Route exact path='/signin' component={SignInScreen} />\n      <Route exact path='/products' component={ProductsScreen} />\n      <Route exact path='/products/:id' component={ProductScreen} />\n      <Route path='/cart' component={CartScreen} />\n      <Route path='/shipping' component={ShippingScreen} />\n      <Route path='/payment' component={PaymentScreen} />\n      <Route path='/placeorder' component={PlaceOrderScreen} />\n      <Route exact path='/user/orders' component={OrdersScreen} />\n      <Route exact path='/user/orders/:id' component={OrderScreen} />\n      <Route exact path='/admin/users' component={AdminUsersScreen} />\n      <Route exact path='/admin/users/:id' component={AdminUserScreen} />\n      <Route exact path='/admin/orders' component={AdminOrdersScreen} />\n      <Route exact path='/admin/orders/:id' component={AdminOrderScreen} />\n      <Route exact path='/admin/products' component={AdminProductsScreen} />\n      <Route exact path='/admin/products/create' component={AdminProductCreateScreen} />\n      <Route exact path='/admin/products/:id' component={AdminProductScreen} />\n      <Route exact path='/search/:keyword' component={HomeScreen} />\n      <Route exact path='/' component={HomeScreen} />\n      <Route component={NotFoundScreen} />\n    </Switch>\n  );\n};\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Routes } from '../../router/Routes';\n\nexport const Body = (): JSX.Element => {\n  return (\n    <main className='py-3'>\n      <Container>\n        <Routes />\n      </Container>\n    </main>\n  );\n};\n","import React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\n\nexport const Footer = (): JSX.Element => {\n  return (\n    <div>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>Copyright &copy; ProShop</Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { RouterEndpoint } from '../../router/RouterEndpoint';\n\nexport const SearchBox = (): JSX.Element => {\n  const history = useHistory();\n  const [keyword, setKeyword] = useState('');\n\n  const submitHandler = (e: React.FormEvent<HTMLElement>) => {\n    e.preventDefault();\n\n    if (keyword.trim()) {\n      history.push(RouterEndpoint.search(keyword.trim()));\n    } else {\n      history.push(RouterEndpoint.home());\n    }\n  };\n\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type='text'\n        name='q'\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder='Search...'\n        className='mr-sm-2 ml-sm-5'\n      />\n      <Button type='submit' variant='outline-success' className='p-2'>\n        Search\n      </Button>\n    </Form>\n  );\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useMemo } from 'react';\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { RouterEndpoint } from '../../router/RouterEndpoint';\nimport { State } from '../../store/Store';\nimport { AuthActions } from '../auth/AuthActions';\nimport { CartActions } from '../cart/CartActions';\nimport { CartUtils } from '../cart/CartUtils';\nimport { OrderActions } from '../order/OrderActions';\nimport { SearchBox } from '../search/SearchBox';\nimport { UserActions } from '../user/UserActions';\n\nexport const Header = (): JSX.Element => {\n  const { i18n } = useTranslation();\n  const dispatch = useDispatch();\n\n  const authState = useSelector((state: State) => state.auth);\n  const { data: authData } = authState;\n\n  const cartState = useSelector((state: State) => state.cart);\n  const { orderItems } = cartState.data;\n\n  const orderItemsCount = useMemo(() => {\n    return CartUtils.getOrderItemsCount(orderItems);\n  }, [orderItems]);\n\n  const signOutHandler = () => {\n    dispatch(AuthActions.signOut());\n    dispatch(CartActions.reset());\n    dispatch(OrderActions.reset());\n    dispatch(UserActions.reset());\n  };\n\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(lng);\n  };\n\n  return (\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container>\n          <LinkContainer to={RouterEndpoint.home()}>\n            <Navbar.Brand>ProShop</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <SearchBox />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='ml-auto'>\n              <NavDropdown title='Language' id='language'>\n                <NavDropdown.Item onClick={() => changeLanguage('en')}>English</NavDropdown.Item>\n                <NavDropdown.Item onClick={() => changeLanguage('de')}>German</NavDropdown.Item>\n              </NavDropdown>\n              <LinkContainer to={RouterEndpoint.cart()}>\n                <Nav.Link>\n                  {orderItemsCount > 0 && <span>{orderItemsCount}</span>}\n                  <FontAwesomeIcon icon={['fas', 'shopping-cart']} />\n                  Cart\n                </Nav.Link>\n              </LinkContainer>\n              {authData ? (\n                <NavDropdown title={authData.user.name} id='user'>\n                  <LinkContainer to={RouterEndpoint.userOrders()}>\n                    <NavDropdown.Item>My Orders</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={signOutHandler}>Sign Out</NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to={RouterEndpoint.signIn()}>\n                  <Nav.Link>\n                    <FontAwesomeIcon icon={['fas', 'user']} />\n                    Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {authData && authData.user.isAdmin && (\n                <NavDropdown title='Admin' id='admin'>\n                  <LinkContainer to={RouterEndpoint.adminUsers()}>\n                    <NavDropdown.Item>All Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to={RouterEndpoint.adminOrders()}>\n                    <NavDropdown.Item>All Orders</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to={RouterEndpoint.adminProducts()}>\n                    <NavDropdown.Item>All Products</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n","import i18n from 'i18next';\nimport languageDetector from 'i18next-browser-languagedetector';\nimport httpBackend from 'i18next-http-backend';\nimport { initReactI18next } from 'react-i18next';\n\ni18n\n  .use(languageDetector)\n  .use(initReactI18next)\n  .use(httpBackend)\n  .init({\n    backend: {\n      loadPath: '/assets/locales/{{lng}}/{{ns}}.json',\n    },\n    ns: ['common'],\n    defaultNS: 'common',\n    nonExplicitSupportedLngs: true,\n    supportedLngs: ['en', 'de'],\n    load: 'languageOnly',\n    fallbackLng: false,\n    debug: process.env.NODE_ENV === 'development',\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import React from 'react';\nimport { Loader } from '../components/loader/Loader';\nimport '../i18n/i18n';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\n//  app catches the suspense from page in case translations are not yet loaded\nexport const I18nProvider = ({ children }: Props): JSX.Element => {\n  return <React.Suspense fallback={<Loader />}>{children}</React.Suspense>;\n};\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const RouterProvider = ({ children }: Props): JSX.Element => {\n  return <Router>{children}</Router>;\n};\n","import React from 'react';\nimport { SkeletonTheme } from 'react-loading-skeleton';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const SkeletonThemeProvider = ({ children }: Props): JSX.Element => {\n  return <SkeletonTheme>{children}</SkeletonTheme>;\n};\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { AuthStore } from '../components/auth/AuthStore';\nimport { CartStore } from '../components/cart/CartStore';\nimport { OrderStore } from '../components/order/OrderStore';\nimport { ProductStore } from '../components/product/ProductStore';\nimport { UserStore } from '../components/user/UserStore';\n\nconst combinedReducer = combineReducers({\n  auth: AuthStore.reducer,\n  product: ProductStore.reducer,\n  user: UserStore.reducer,\n  cart: CartStore.reducer,\n  order: OrderStore.reducer,\n});\n\nconst middleware = [thunk];\n\nconst inittialState = {};\n\nexport type State = ReturnType<typeof combinedReducer>;\n\nexport const Store = createStore(\n  combinedReducer,\n  inittialState,\n  composeWithDevTools(applyMiddleware(...middleware)),\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { Store } from './Store';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const StoreProvider = ({ children }: Props): JSX.Element => {\n  return <Provider store={Store}>{children}</Provider>;\n};\n","import 'reflect-metadata';\nimport { FontAwesome } from '../font/FontAwesome';\nimport { AppContext } from './AppContext';\n\nexport const AppConfig = (): null => {\n  AppContext();\n  FontAwesome();\n\n  return null;\n};\n","import { cleanEnv, str } from 'envalid';\nimport { Logger } from '../log/Logger';\n\nexport const AppContext = (): void => {\n  cleanEnv(process.env, {\n    REACT_APP_ENV_NAME: str(),\n    REACT_APP_APP_API_URL: str(),\n  });\n\n  const { REACT_APP_ENV_NAME } = process.env;\n  Logger.log(`App started in mode ${REACT_APP_ENV_NAME}`);\n};\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { far } from '@fortawesome/free-regular-svg-icons';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\n\nexport const FontAwesome = (): void => {\n  library.add(fas, far);\n};\n","import React from 'react';\nimport { ErrorHandler } from '../components/exception/ErrorHandler';\nimport { Body } from '../components/outline/Body';\nimport { Footer } from '../components/outline/Footer';\nimport { Header } from '../components/outline/Header';\nimport { I18nProvider } from '../i18n/I18nProvider';\nimport { RouterProvider } from '../router/RouterProvider';\nimport { SkeletonThemeProvider } from '../skeleton/SkeletonThemeProvider';\nimport { StoreProvider } from '../store/StoreProvider';\nimport { AppConfig } from './AppConfig';\n\nexport const App = (): JSX.Element => {\n  return (\n    <ErrorHandler>\n      <AppConfig />\n      <StoreProvider>\n        <RouterProvider>\n          <SkeletonThemeProvider>\n            <I18nProvider>\n              <Header />\n              <Body />\n              <Footer />\n            </I18nProvider>\n          </SkeletonThemeProvider>\n        </RouterProvider>\n      </StoreProvider>\n    </ErrorHandler>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './app/App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}